✖ [7213/7214] Building IndisputableMonolith (18s)
trace: .> LEAN_PATH=/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/Cli/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/batteries/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/Qq/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/aesop/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/proofwidgets/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/importGraph/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/LeanSearchClient/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/plausible/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/packages/mathlib/.lake/build/lib/lean:/Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/build/lib/lean /Users/jonathanwashburn/.elan/toolchains/leanprover--lean4---v4.23.0-rc2/bin/lean /Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/IndisputableMonolith.lean -o /Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/build/lib/lean/IndisputableMonolith.olean -i /Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/build/lib/lean/IndisputableMonolith.ilean -c /Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/build/ir/IndisputableMonolith.c --setup /Users/jonathanwashburn/Documents/T9 Copy - August 29/Cursor-Active/dna-lean/recognition/.lake/build/ir/IndisputableMonolith.setup.json --json
error: IndisputableMonolith.lean:27:29: Failed to infer type of binder `hi`
error: IndisputableMonolith.lean:28:50: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  UnitsCert
error: IndisputableMonolith.lean:28:71: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  UnitsCert
error: IndisputableMonolith.lean:36:31: Failed to infer type of binder `eps`
error: IndisputableMonolith.lean:36:38: unexpected token ';'; expected command
error: IndisputableMonolith.lean:37:57: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  MassCert
error: IndisputableMonolith.lean:37:78: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  MassCert
error: IndisputableMonolith.lean:39:38: unexpected token ';'; expected command
error: IndisputableMonolith.lean:45:41: unexpected token ';'; expected command
error: IndisputableMonolith.lean:61:21: don't know how to synthesize implicit argument 'MassCert'
  @MassCert.verified (?m.36 φ C) φ c
context:
φ : ℝ
C : CertFamily
c : ?m.36 φ C
⊢ Type u_2
error: IndisputableMonolith.lean:61:5: don't know how to synthesize implicit argument 'γ'
  @Membership.mem (?m.36 φ C) (List (?m.36 φ C)) List.instMembership C.masses c
context:
φ : ℝ
C : CertFamily
c : ?m.36 φ C
⊢ Type u_2
error: IndisputableMonolith.lean:61:5: don't know how to synthesize implicit argument 'α'
  @Membership.mem (?m.36 φ C) (List (?m.36 φ C)) List.instMembership C.masses c
context:
φ : ℝ
C : CertFamily
c : ?m.36 φ C
⊢ outParam (Type u_2)
error: IndisputableMonolith.lean:61:11: don't know how to synthesize implicit argument 'MassCert'
  @CertFamily.masses C (?m.36 φ C)
context:
φ : ℝ
C : CertFamily
c : ?m.36 φ C
⊢ Type u_2
error: IndisputableMonolith.lean:61:7: Failed to infer type of binder `c`
error: IndisputableMonolith.lean:58:18: don't know how to synthesize implicit argument 'UnitsCert'
  @UnitsCert.verified (?m.35 φ C) c
context:
φ : ℝ
C : CertFamily
c : ?m.35 φ C
⊢ Type u_1
error: IndisputableMonolith.lean:58:3: don't know how to synthesize implicit argument 'γ'
  @Membership.mem (?m.35 φ C) (List (?m.35 φ C)) List.instMembership C.units c
context:
φ : ℝ
C : CertFamily
c : ?m.35 φ C
⊢ Type u_1
error: IndisputableMonolith.lean:58:3: don't know how to synthesize implicit argument 'α'
  @Membership.mem (?m.35 φ C) (List (?m.35 φ C)) List.instMembership C.units c
context:
φ : ℝ
C : CertFamily
c : ?m.35 φ C
⊢ outParam (Type u_1)
error: IndisputableMonolith.lean:58:9: don't know how to synthesize implicit argument 'UnitsCert'
  @CertFamily.units C (?m.35 φ C)
context:
φ : ℝ
C : CertFamily
c : ?m.35 φ C
⊢ Type u_1
error: IndisputableMonolith.lean:58:5: Failed to infer type of binder `c`
error: IndisputableMonolith.lean:67:59: Application type mismatch: The argument
  c
has type
  MassCert
but is expected to have type
  MassCert✝
in the application
  List.cons c
error: IndisputableMonolith.lean:71:7: Invalid field notation: Type is not of the form `C ...` where C is a constant
  MassCert
has type
  Sort ?u.5497
error: IndisputableMonolith.lean:71:70: unsolved goals
MassCert : Sort u_1
φ : ℝ
c : MassCert
h : sorry
⊢ sorry φ { masses := fun {MassCert} => [sorry ()] }
error: IndisputableMonolith.lean:76:2: failed to generate projection 'IndisputableMonolith.URCGenerators.VerifiedGenerators.fam' for the 'Prop'-valued type 'VerifiedGenerators', field must be a proof, but it has type
  CertFamily
error: IndisputableMonolith.lean:79:30: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:80:34: Unknown identifier `IndisputableMonolith.CompleteCover`
error: IndisputableMonolith.lean:81:28: Unknown identifier `IndisputableMonolith.Jlog`
error: IndisputableMonolith.lean:82:33: Unknown identifier `IndisputableMonolith.Jlog`
error: IndisputableMonolith.lean:82:63: Unknown identifier `IndisputableMonolith.Jlog`
error: IndisputableMonolith.lean:81:22: failed to synthesize
  NontriviallyNormedField ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:81:22: failed to synthesize
  AddCommGroup ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:84:9: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:85:4: Unknown identifier `IndisputableMonolith.Masses.Derivation.massCanonUnits`
error: IndisputableMonolith.lean:86:8: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:86:45: Unknown identifier `IndisputableMonolith.Masses.Derivation.massCanonUnits`
error: IndisputableMonolith.lean:93:10: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

case units
φ : ℝ
VG : VerifiedGenerators φ
⊢ UnitsProp
error: IndisputableMonolith.lean:94:16: Unknown identifier `IndisputableMonolith.period_exactly_8`
error: IndisputableMonolith.lean:96:10: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

case rung
φ : ℝ
VG : VerifiedGenerators φ
⊢ PhiRungProp
error: IndisputableMonolith.lean:101:38: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:102:21: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:103:16: Unknown identifier `inv_lt_one`
error: IndisputableMonolith.lean:104:20: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:105:26: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:107:11: Unknown identifier `IndisputableMonolith.Constants.phi_fixed_point`
error: IndisputableMonolith.lean:108:24: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:108:66: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:109:31: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:111:25: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:112:11: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:113:4: linarith failed to find a contradiction
case h
inv_lt : 1 / sorry < 1
phi_lt_two : sorry < 2
tri : |1 - sorry| ≤ 1 + sorry
this : sorry ≤ 2
a✝ : 3 < 1 + sorry
⊢ False
failed
error: IndisputableMonolith.lean:117:45: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:118:10: Unknown identifier `UnitsCert`
error: IndisputableMonolith.lean:121:10: Unknown identifier `MassCert`
error: IndisputableMonolith.lean:125:30: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:129:21: Unknown identifier `IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:122:83: linarith failed to find a contradiction
case left.h
u : sorry := sorry
e8 : EightBeatCert := { T := 8 }
el0 : ELProbe := { eps := 0 }
m : sorry := sorry
a✝ : 1 < sorry ()
⊢ False
failed
error: IndisputableMonolith.lean:122:83: linarith failed to find a contradiction
case right.h
u : sorry := sorry
e8 : EightBeatCert := { T := 8 }
el0 : ELProbe := { eps := 0 }
m : sorry := sorry
a✝ : sorry () < 1
⊢ False
failed
error: IndisputableMonolith.lean:124:66: linarith failed to find a contradiction
case h
u : sorry := sorry
e8 : EightBeatCert := { T := 8 }
el0 : ELProbe := { eps := 0 }
m : sorry := sorry
hu : UnitsCert.verified u
he8 : e8.verified
a✝ : ↑el0.eps < 0
⊢ False
failed
error: IndisputableMonolith.lean:126:43: Unknown identifier `mass_bound_for_IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:132:12: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

u : sorry := sorry
e8 : EightBeatCert := { T := 8 }
el0 : ELProbe := { eps := 0 }
m : sorry := sorry
hu : UnitsCert.verified u
he8 : e8.verified
hel : el0.verified
hm : MassCert.verified sorry m
C : CertFamily :=
  { units := fun {UnitsCert} => [sorry], eightbeat := [e8], elprobes := [el0], masses := fun {MassCert} => [sorry] }
⊢ sorry (sorry ())
    { units := fun {UnitsCert} => [sorry ()], eightbeat := [e8], elprobes := [el0],
      masses := fun {MassCert} => [sorry ()] }
error: IndisputableMonolith.lean:133:4: No goals to be solved
warning: IndisputableMonolith.lean:141:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:241:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:255:49: This simp argument is unused:
  card_pattern d

Hint: Omit it from the simp argument list.
  simp [Fintype.card_fin,̵ ̵c̵a̵r̵d̵_̵p̵a̵t̵t̵e̵r̵n̵ ̵d̵] at hcard

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:279:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:304:24: Application type mismatch: The argument
  i
has type
  Fin (2 ^ D)
but is expected to have type
  Fin (Fintype.card (Pattern D))
in the application
  einv i
warning: IndisputableMonolith.lean:315:58: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:351:18: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:368:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:374:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:379:24: This simp argument is unused:
  add_comm

Hint: Omit it from the simp argument list.
  simp [toZ_fromZ δ hδ, add_c̵o̵m̵m̵,̵ ̵a̵d̵d̵_̵left_comm, add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:379:34: This simp argument is unused:
  add_left_comm

Hint: Omit it from the simp argument list.
  simp [toZ_fromZ δ hδ, add_comm, a̵d̵d̵_̵l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:379:49: This simp argument is unused:
  add_assoc

Hint: Omit it from the simp argument list.
  simp [toZ_fromZ δ hδ, add_comm, add_left_comm,̵ ̵a̵d̵d̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:382:4: failed to compile definition, consider marking it as 'noncomputable' because it depends on 'toZ', which is 'noncomputable'
warning: IndisputableMonolith.lean:386:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:400:4: failed to compile definition, consider marking it as 'noncomputable' because it depends on 'fromZ', which is 'noncomputable'
error: IndisputableMonolith.lean:403:4: failed to compile definition, consider marking it as 'noncomputable' because it depends on 'toZ', which is 'noncomputable'
warning: IndisputableMonolith.lean:411:18: `Int.toNat_ofNat` has been deprecated: Use `Int.toNat_natCast` instead
error: IndisputableMonolith.lean:411:2: Tactic `assumption` failed

δ : ℤ
hδ : δ ≠ 0
m : ℕ
⊢ kOf δ (fromZ δ ↑m) = m
error: IndisputableMonolith.lean:415:2: Type mismatch: After simplification, term
  congrArg Int.toNat (toZ_succ δ hδ (Int.ofNat m))
 has type
  (toZ δ (fromZ δ (↑m + 1))).toNat = (toZ δ (fromZ δ ↑m) + 1).toNat
but is expected to have type
  kOf δ (fromZ δ (↑m + 1)) = kOf δ (fromZ δ ↑m) + 1
warning: IndisputableMonolith.lean:435:36: unused variable `hδ`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:440:85: unsolved goals
δ : ℤ
hδ : δ ≠ 0
f : AffineMapZ
p q : DeltaSub δ
⊢ f.slope * ↑(LedgerUnits.toZ δ p) + -(f.slope * ↑(LedgerUnits.toZ δ q)) =
    f.slope * (↑(LedgerUnits.toZ δ p) + -↑(LedgerUnits.toZ δ q))
warning: IndisputableMonolith.lean:442:70: This simp argument is unused:
  mul_comm

Hint: Omit it from the simp argument list.
  simp [mapDelta, sub_eq_add_neg, add_comm, add_left_comm, add_assoc, mul_c̵o̵m̵m̵,̵ ̵m̵u̵l_̵l̵eft_comm, mul_assoc,
  ̲  ̲ ̲ ̲sub_eq_add_neg]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:442:80: This simp argument is unused:
  mul_left_comm

Hint: Omit it from the simp argument list.
  simp [mapDelta, sub_eq_add_neg, add_comm, add_left_comm, add_assoc, mul_comm, m̵u̵l̵_̵l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵mul_assoc,
  ̲  ̲ ̲ ̲sub_eq_add_neg]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:442:95: This simp argument is unused:
  mul_assoc

Hint: Omit it from the simp argument list.
  simp [mapDelta, sub_eq_add_neg, add_comm, add_left_comm, add_assoc, mul_comm, mul_left_comm,
  ̲ m̵u̵l̵_̵a̵s̵s̵o̵c̵,̵  ̲ ̲sub_eq_add_neg]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:446:17: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:447:19: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:447:86: Unknown identifier `IndisputableMonolith.Constants.RSUnits.hbar`
error: IndisputableMonolith.lean:454:57: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:458:59: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:472:7: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
warning: IndisputableMonolith.lean:474:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:474:22: declaration uses 'sorry'
error: IndisputableMonolith.lean:477:7: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:479:2: Tactic `assumption` failed

δ : ℤ
hδ : δ ≠ 0
U : sorry
n : ℤ
⊢ sorry () * (↑n + 1) - sorry () * ↑n = sorry ()
warning: IndisputableMonolith.lean:479:9: declaration uses 'sorry'
warning: IndisputableMonolith.lean:479:23: declaration uses 'sorry'
error: IndisputableMonolith.lean:482:7: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:483:39: Unknown identifier `IndisputableMonolith.Constants.RSUnits.hbar`
warning: IndisputableMonolith.lean:484:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:484:24: declaration uses 'sorry'
error: IndisputableMonolith.lean:487:7: Unknown identifier `IndisputableMonolith.Constants.RSUnits`
error: IndisputableMonolith.lean:489:6: Unknown identifier `IndisputableMonolith.Constants.RSUnits.hbar`
error: IndisputableMonolith.lean:490:2: Tactic `assumption` failed

δ : ℤ
hδ : δ ≠ 0
U : sorry
n : ℤ
⊢ sorry () * (↑n + 1) - sorry () * ↑n = sorry ()
warning: IndisputableMonolith.lean:490:9: declaration uses 'sorry'
warning: IndisputableMonolith.lean:490:25: declaration uses 'sorry'
error: IndisputableMonolith.lean:611:82: unexpected token 'namespace'; expected 'lemma'
error: IndisputableMonolith.lean:623:35: Type mismatch
  BoundedStep.step
has type
  (degree_bound : ℕ) → [self : BoundedStep ?m.2 degree_bound] → ?m.2 → ?m.2 → Prop
but is expected to have type
  α → α → Prop
error: IndisputableMonolith.lean:630:11: Invalid field `bind`: The environment does not contain `Finset.bind`
  prev
has type
  Finset α
warning: IndisputableMonolith.lean:633:8: declaration uses 'sorry'
error: IndisputableMonolith.lean:635:6: Invalid field `bind`: The environment does not contain `Finset.bind`
  s
has type
  Finset α
error: IndisputableMonolith.lean:635:85: Application type mismatch: The argument
  z
has type
  α
but is expected to have type
  ℕ
in the application
  @BoundedStep.neighbors ?m.12 z
error: IndisputableMonolith.lean:635:59: failed to synthesize
  Membership α (?m.12 → Finset ?m.12)

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:635:90: unsolved goals
α : Type
inst✝ : DecidableEq α
s : Finset α
y : α
⊢ y ∈ sorry () ↔ (∃ x, x ∈ s) ∧ sorry ()
warning: IndisputableMonolith.lean:644:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:649:13: Invalid field `bind`: The environment does not contain `Finset.bind`
  prev
has type
  Finset α
error: IndisputableMonolith.lean:645:2: unsolved goals
case succ
α : Type
inst✝ : DecidableEq α
x : α
n : ℕ
ih : ∀ (y : α), y ∈ ballFS x n ↔ ballP KB x n y
y : α
this : ballFS x n ∪ sorry () = ballFS x n ∪ sorry ()
⊢ ballP KB x n y ∨ y ∈ sorry () ↔ ballP KB x n y ∨ ∃ z, ballP KB x n z ∧ KB.step z y
warning: IndisputableMonolith.lean:644:11: declaration uses 'sorry'
warning: IndisputableMonolith.lean:652:29: This simp argument is unused:
  BoundedStep.step_iff_mem

Hint: Omit it from the simp argument list.
  simp [ballFS, ballP, ih,̵ ̵B̵o̵u̵n̵d̵e̵d̵S̵t̵e̵p̵.̵s̵t̵e̵p̵_̵i̵f̵f̵_̵m̵e̵m̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:654:8: automatically included section variable(s) unused in theorem 'IndisputableMonolith.ConeBound.card_singleton':
  [DecidableEq α]
consider restructuring your `variable` declarations so that the variables are not in scope or explicitly omit them:
  omit [DecidableEq α] in theorem ...

Note: This linter can be disabled with `set_option linter.unusedSectionVars false`
error: IndisputableMonolith.lean:666:23: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:681:5: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:706:3: Invalid field `bind`: The environment does not contain `Finset.bind`
  s
has type
  Finset α
error: IndisputableMonolith.lean:708:18: Unknown identifier `card_bind_le_sum`
error: IndisputableMonolith.lean:708:86: Unknown identifier `sum_card_neighbors_le`
error: IndisputableMonolith.lean:706:67: unsolved goals
α : Type
d : ℕ
inst✝ : DecidableEq α
B : BoundedStep α d
s : Finset α
⊢ sorry ≤ d * s.card
error: IndisputableMonolith.lean:717:11: Invalid field `bind`: The environment does not contain `Finset.bind`
  prev
has type
  Finset α
error: IndisputableMonolith.lean:721:29: Invalid field `bind`: The environment does not contain `Finset.bind`
  prev
has type
  Finset α
error: IndisputableMonolith.lean:722:49: Invalid field `bind`: The environment does not contain `Finset.bind`
  ballFS x n
has type
  Finset α
error: IndisputableMonolith.lean:724:60: Invalid field `bind`: The environment does not contain `Finset.bind`
  ballFS x n
has type
  Finset α
error: IndisputableMonolith.lean:725:20: Invalid field `bind`: The environment does not contain `Finset.bind`
  ballFS x n
has type
  Finset α
error: IndisputableMonolith.lean:730:2: Type mismatch: After simplification, term
  this
 has type
  (ballFS x (n + 1)).card ≤ (ballFS x n).card + d * (ballFS x n).card
but is expected to have type
  (ballFS x (n + 1)).card ≤ (d + 1) * (ballFS x n).card
warning: IndisputableMonolith.lean:724:11: declaration uses 'sorry'
warning: IndisputableMonolith.lean:739:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:746:24: Application type mismatch: The argument
  hmul
has type
  (1 + d) * (ballFS x n).card ≤ (1 + d) * (1 + d) ^ n
but is expected to have type
  (1 + d) * (ballFS x n).card ≤ (1 + d) ^ (n + 1)
in the application
  le_trans hrec hmul
warning: IndisputableMonolith.lean:739:11: declaration uses 'sorry'
error: IndisputableMonolith.lean:750:66: unexpected token 'namespace'; expected 'lemma'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:759:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:783:55: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:790:60: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:791:51: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:792:14: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:779:29: unsolved goals
case succ.calc.step
α : Type
K : Causality.Kinematics α
U : sorry
time rad : α → ℝ
H : StepBounds K U time rad
n✝ : ℕ
x✝ y✝ : α
n : ℕ
x y z : α
hxy : Causality.ReachN K n x y
hyz : K.step y z
ih : time y = time x + ↑n * sorry
ht : time z = time y + sorry
⊢ time x + (↑n + 1) * sorry = time x + ↑(n + 1) * sorry
warning: IndisputableMonolith.lean:785:45: This simp argument is unused:
  add_assoc

Hint: Omit it from the simp argument list.
  simp [add_comm, add_left_comm,̵ ̵a̵d̵d̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:814:60: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:815:51: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:816:14: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:802:29: unsolved goals
case succ.calc.step
α : Type
K : Causality.Kinematics α
U : sorry
time rad : α → ℝ
H : StepBounds K U time rad
n✝ : ℕ
x✝ y✝ : α
n : ℕ
x y z : α
hxy : Causality.ReachN K n x y
hyz : K.step y z
ih : rad y ≤ rad x + ↑n * sorry
hr : rad z ≤ rad y + sorry
⊢ rad x + (↑n + 1) * sorry ≤ rad x + ↑(n + 1) * sorry
warning: IndisputableMonolith.lean:809:45: This simp argument is unused:
  add_assoc

Hint: Omit it from the simp argument list.
  simp [add_comm, add_left_comm,̵ ̵a̵d̵d̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:827:11: Unknown identifier `sub_eq`
error: IndisputableMonolith.lean:831:11: Unknown identifier `sub_eq`
error: IndisputableMonolith.lean:823:45: unsolved goals
α : Type
K : Causality.Kinematics α
U : sorry
time rad : α → ℝ
H : StepBounds K U time rad
n : ℕ
x y : α
h : Causality.ReachN K n x y
ht : time y = time x + ↑n * sorry
hr : rad y ≤ rad x + ↑n * sorry
hτ : time y - time x = ↑n * sorry
hℓ : rad y - rad x ≤ ↑n * sorry
⊢ rad y - rad x ≤ sorry * (time y - time x)
error: IndisputableMonolith.lean:840:37: unexpected token 'namespace'; expected 'lemma'
error: IndisputableMonolith.lean:880:42: Type mismatch
  src.J
has type
  DForm α 1
but is expected to have type
  DForm α (1 + 1)
error: IndisputableMonolith.lean:881:42: Type mismatch
  src.ρ
has type
  DForm α 0
but is expected to have type
  DForm α (2 + 1)
error: IndisputableMonolith.lean:883:19: Type mismatch
  fun s => M.eps * HasHodge.star E s
has type
  Simplex α (HasHodge.n α - 1) → ℝ
but is expected to have type
  DForm α 2
error: IndisputableMonolith.lean:884:19: Type mismatch
  fun s => M.mu * HasHodge.star H s
has type
  Simplex α (HasHodge.n α - 1) → ℝ
but is expected to have type
  DForm α 2
error: IndisputableMonolith.lean:892:68: unexpected token 'namespace'; expected 'lemma'
error: IndisputableMonolith.lean:951:75: Unknown constant `Nat.ofInt`
error: IndisputableMonolith.lean:952:112: Unknown constant `Nat.ofInt`
error: IndisputableMonolith.lean:960:12: `simp` made no progress
warning: IndisputableMonolith.lean:1058:34: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:1061:34: This simp argument is unused:
  Nat.cast_ofNat

Hint: Omit it from the simp argument list.
  simp [Nat.cast_add,̵ ̵N̵a̵t̵.̵c̵a̵s̵t̵_̵o̵f̵N̵a̵t̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:1123:3: unexpected token 'namespace'; expected 'lemma'
warning: IndisputableMonolith.lean:1163:31: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:1165:31: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:1164:37: This simp argument is unused:
  add_assoc

Hint: Omit it from the simp argument list.
  simp [̵a̵d̵d̵_̵a̵s̵s̵o̵c̵,̵ ̵a̵d̵d̵_̵c̵o̵m̵m̵,̵[̲a̲d̲d̲_̲c̲o̲m̲m̲,̲ add_left_comm]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:1189:28: Type mismatch
  yc.reachable
has type
  Reaches (Kin M) x0 yc.y
but is expected to have type
  M.R a✝ b✝ → p b✝ - p a✝ = δ
the following variables have been introduced by the implicit lambda feature
  a✝ : M.U
  b✝ : M.U
you can disable implicit lambdas using `@` or writing a lambda expression with `{}` or `[]` binder annotations.
error: IndisputableMonolith.lean:1190:2: Type mismatch: After simplification, term
  this
 has type
  DE δ q → ∀ {x0 y : M.U}, p x0 = q x0 → Reaches (Kin M) x0 y → p y = q y
but is expected to have type
  p yc.y = q yc.y
error: IndisputableMonolith.lean:1221:2: Type mismatch: After simplification, term
  this
 has type
  u = w
but is expected to have type
  u = ↑(indefiniteDescription (postedAt t) ⋯)
error: IndisputableMonolith.lean:1227:5: unknown namespace 'Measure'
error: IndisputableMonolith.lean:1233:86: unexpected token '/-!'; expected 'lemma'
error: IndisputableMonolith.lean:1244:5: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:1250:0: type of theorem 'IndisputableMonolith.ClassicalBridge.discrete_to_continuum_continuity' is not a proposition
  {M : RecognitionStructure} →
    {α : Type} → CoarseGrain α → (L : Ledger M) → [Conserves L] → (α → ℝ) → (∃ I, True) → ContinuityEquation α
error: IndisputableMonolith.lean:1266:6: Function expected at
  Map
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  State
error: IndisputableMonolith.lean:1314:2: No applicable extensionality theorem found for type
  ℕ

Note: Extensionality theorems can be registered by marking them with the `[ext]` attribute
error: IndisputableMonolith.lean:1331:37: Function expected at
  f
but this term has type
  ?m.31

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:1331:4: invalid `▸` notation, expected result type of cast is 
  (∑ i,
      if
          (have i := ⟨↑i % 8, ⋯⟩;
            w i) =
            true then
        1
      else 0) =
    ∑ i, if w i = true then 1 else 0
however, the equality 
  congrArg (fun f => ∑ i, ?m.45) ?m.49
of type 
  ∑ i, ?m.48 ?m.33 i = ∑ i, ?m.48 ?m.34 i
does not contain the expected result type on either the left or the right hand side
error: IndisputableMonolith.lean:1333:2: No goals to be solved
warning: IndisputableMonolith.lean:1357:10: This simp argument is unused:
  Nat.zero_mul

Hint: Omit it from the simp argument list.
  simp [̵N̵a̵t̵.̵z̵e̵r̵o̵_̵m̵u̵l̵,̵ ̵z̵e̵r̵o̵_̵a̵d̵d̵]̵[̲z̲e̲r̲o̲_̲a̲d̲d̲]̲

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:1367:2: Function expected at
  blockSumAligned8
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  1
error: IndisputableMonolith.lean:1369:9: Tactic `unfold` failed: Local variable `blockSumAligned8` has no definition
warning: IndisputableMonolith.lean:1387:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:1398:42: Function expected at
  f
but this term has type
  ?m.44

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:1398:2: Type mismatch
  congrArg (fun f => ∑ i, ?m.58) ?m.62
has type
  ∑ i, ?m.61 ?m.46 i = ∑ i, ?m.61 ?m.47 i
but is expected to have type
  (∑ i,
      if
          (have i := ⟨(j * 8 + ↑i) % 8, ⋯⟩;
            w i) =
            true then
        1
      else 0) =
    ∑ i, if w i = true then 1 else 0
warning: IndisputableMonolith.lean:1411:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:1416:25: Application type mismatch: The last
  this
argument has type
  ((fun f => ∑ j, f j) fun x => subBlockSum8 (extendPeriodic8 w) ↑x) = (fun f => ∑ j, f j) fun x => Z_of_window w
but is expected to have type
  ((fun f => ∑ j, f j) fun x => Z_of_window w) = ?m.68
in the application
  Eq.trans this this
warning: IndisputableMonolith.lean:1434:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
info: IndisputableMonolith.lean:1451:0: 4
info: IndisputableMonolith.lean:1454:0: 4
error: IndisputableMonolith.lean:1459:5: unknown namespace 'IndisputableMonolith.Dynamics'
error: IndisputableMonolith.lean:1467:71: Application type mismatch: The argument
  State
has type
  RecognitionStructure → Type
but is expected to have type
  Type
in the application
  Realization State
error: IndisputableMonolith.lean:1467:42: Function expected at
  Map
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  State
error: IndisputableMonolith.lean:1469:23: Unknown identifier `Dynamics.tick_evolution`
error: IndisputableMonolith.lean:1470:23: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:1474:23: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:1500:12: invalid `▸` notation, the equality
  congrArg (fun t => t - g (basepoint x0)) h2
has type 
  f (basepoint x0) - g (basepoint x0) = g (basepoint x0) + c₂ - g (basepoint x0)
but neither side of the equality is mentioned in the type
  (fun t => t - g (basepoint x0)) (f (basepoint x0)) = (fun t => t - g (basepoint x0)) (g (basepoint x0) + c₁)
error: IndisputableMonolith.lean:1498:63: unsolved goals
M : RecognitionStructure
x0 : M.U
f g : PotOnComp M x0
c₁ c₂ : ℤ
h₁ : ∀ (yc : Component M x0), f yc = g yc + c₁
h₂ : ∀ (yc : Component M x0), f yc = g yc + c₂
h1 : f (basepoint x0) = g (basepoint x0) + c₁
h2 : f (basepoint x0) = g (basepoint x0) + c₂
this : (fun t => t - g (basepoint x0)) (f (basepoint x0)) = (fun t => t - g (basepoint x0)) (g (basepoint x0) + c₁)
⊢ c₁ = c₂
error: IndisputableMonolith.lean:1518:4: Type mismatch
  gauge_constant_unique (fun yc => id (hc yc.reachable)) hc'
has type
  c = c'
but is expected to have type
  c' = c
warning: IndisputableMonolith.lean:1561:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:1582:57: The syntax is now `structure S : Type extends P` rather than `structure S extends P : Type`

Note: The purpose of this change is to accommodate `structure S extends toP : P` syntax for naming parent projections.
warning: IndisputableMonolith.lean:1594:53: The syntax is now `structure S : Type extends P` rather than `structure S extends P : Type`

Note: The purpose of this change is to accommodate `structure S extends toP : P` syntax for naming parent projections.
warning: IndisputableMonolith.lean:1632:50: The syntax is now `structure S : Type extends P` rather than `structure S extends P : Type`

Note: The purpose of this change is to accommodate `structure S extends toP : P` syntax for naming parent projections.
warning: IndisputableMonolith.lean:1692:8: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:1723:8: 'IndisputableMonolith.Cost.F_eq_J_on_pos' has already been declared
error: IndisputableMonolith.lean:2432:7: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2433:11: Unknown identifier `RH.RS.CoreAxioms`
error: IndisputableMonolith.lean:2434:15: Unknown identifier `RH.RS.BridgeIdentifiable`
error: IndisputableMonolith.lean:2435:12: Unknown identifier `RH.RS.UnitsEqv`
error: IndisputableMonolith.lean:2436:14: Unknown identifier `RH.RS.HasRung`
error: IndisputableMonolith.lean:2437:10: Unknown identifier `RH.RS.FortyFiveGapHolds`
error: IndisputableMonolith.lean:2438:9: Unknown identifier `RH.RS.FortyFiveConsequences`
error: IndisputableMonolith.lean:2439:2: Unknown identifier `IM_fortyFive_consequences_exists`
error: IndisputableMonolith.lean:2441:112: unexpected token '/--'; expected 'lemma'
error: IndisputableMonolith.lean:2444:2: Unknown identifier `RH.RS.Inevitability_dimless`
error: IndisputableMonolith.lean:2444:41: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2444:63: Invalid field notation: Type of
  F
is not known; cannot resolve field `delta_is_3_over_64`
error: IndisputableMonolith.lean:2444:86: Invalid field notation: Type of
  F
is not known; cannot resolve field `rung45_exists`
error: IndisputableMonolith.lean:2444:114: Invalid field notation: Type of
  F
is not known; cannot resolve field `no_multiples`
error: IndisputableMonolith.lean:2445:20: Unknown identifier `RH.RS.Witness.inevitability_dimless_partial`
error: IndisputableMonolith.lean:2446:17: Unknown identifier `IM_fortyFive_consequences_exists`
error: IndisputableMonolith.lean:2451:7: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2451:29: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:2451:49: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2452:2: Unknown identifier `RH.RS.CoreAxioms`
error: IndisputableMonolith.lean:2452:24: Unknown identifier `RH.RS.T5Unique`
error: IndisputableMonolith.lean:2452:44: Unknown identifier `RH.RS.QuantumFromLedger`
error: IndisputableMonolith.lean:2453:2: Unknown identifier `RH.RS.BridgeIdentifiable`
error: IndisputableMonolith.lean:2453:32: Unknown identifier `RH.RS.NoInjectedConstants`
error: IndisputableMonolith.lean:2453:63: Unknown identifier `RH.RS.UnitsEqv`
error: IndisputableMonolith.lean:2454:2: Unknown identifier `RH.RS.TwoIndependentSILandings`
error: IndisputableMonolith.lean:2454:38: Unknown identifier `RH.RS.MeasurementRealityBridge`
error: IndisputableMonolith.lean:2455:2: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:2455:35: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2457:19: Unknown identifier `uniqueCalibration_IM`
error: IndisputableMonolith.lean:2457:56: Unknown identifier `meetsBands_IM`
error: IndisputableMonolith.lean:2462:2: Unknown identifier `RH.RS.Recognition_Closure`
error: IndisputableMonolith.lean:2463:20: Unknown identifier `RH.RS.Witness.inevitability_dimless_partial`
error: IndisputableMonolith.lean:2487:17: Unknown identifier `RH.RS.Ledger`
error: IndisputableMonolith.lean:2487:36: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2487:57: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:2487:77: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2488:12: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:2488:44: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2489:2: Unknown identifier `RH.RS.Recognition_Closure`
error: IndisputableMonolith.lean:2490:20: Unknown identifier `RH.RS.Witness.inevitability_dimless_partial`
error: IndisputableMonolith.lean:2503:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:2503:30: unexpected identifier; expected 'lemma'
error: IndisputableMonolith.lean:2509:9: Unknown identifier `RH.RS.Ledger`
error: IndisputableMonolith.lean:2512:11: Unknown identifier `RH.RS.UnitsEqv`
error: IndisputableMonolith.lean:2519:11: Unknown identifier `RH.RS.QuantumFromLedger`
error: IndisputableMonolith.lean:2522:76: unexpected token '/--'; expected 'lemma'
error: IndisputableMonolith.lean:2524:36: Unknown identifier `RH.RS.CoreAxioms`
error: IndisputableMonolith.lean:2529:30: Unknown identifier `RH.RS.T5Unique`
error: IndisputableMonolith.lean:2534:37: Unknown identifier `RH.RS.BridgeIdentifiable`
error: IndisputableMonolith.lean:2539:42: Unknown identifier `RH.RS.NoInjectedConstants`
error: IndisputableMonolith.lean:2544:32: Unknown identifier `RH.RS.TwoIndependentSILandings`
error: IndisputableMonolith.lean:2548:11: Unknown identifier `RH.RS.TwoIndependentSILandings`
error: IndisputableMonolith.lean:2548:0: (kernel) unknown constant 'IndisputableMonolith.Cost.RH.RS.Instances.two_independent_SI_IM'
error: IndisputableMonolith.lean:2550:40: Unknown identifier `RH.RS.MeasurementRealityBridge`
error: IndisputableMonolith.lean:2554:11: Unknown identifier `RH.RS.MeasurementRealityBridge`
error: IndisputableMonolith.lean:2554:0: (kernel) unknown constant 'IndisputableMonolith.Cost.RH.RS.Instances.measurement_reality_bridge_IM'
error: IndisputableMonolith.lean:2557:36: Unknown identifier `RH.RS.Witness.bornHolds`
error: IndisputableMonolith.lean:2557:62: Unknown identifier `RH.RS.Witness.boseFermiHolds`
error: IndisputableMonolith.lean:2558:18: Unknown identifier `RH.RS.Witness.born_from_TruthCore`
error: IndisputableMonolith.lean:2558:52: Unknown identifier `RH.RS.Witness.boseFermi_from_TruthCore`
warning: IndisputableMonolith.lean:2561:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:2564:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:2566:3: unused variable `H`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2567:11: unused variable `h`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2572:26: unused variable `G`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2577:8: unused variable `k_gate_bridge_level`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2583:8: unused variable `dimless_KA_invariant`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2589:8: unused variable `dimless_KB_invariant`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:2599:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:2605:5: unknown namespace 'IndisputableMonolith.Verification'
error: IndisputableMonolith.lean:2608:34: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2608:56: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:2608:73: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:2608:107: unsolved goals
B : sorry
A : sorry
⊢ sorry
error: IndisputableMonolith.lean:2622:27: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2622:49: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2622:64: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2622:91: unsolved goals
B : sorry
X : sorry
⊢ sorry
error: IndisputableMonolith.lean:2640:72: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2641:2: Unknown identifier `evalToBands_c`
error: IndisputableMonolith.lean:2649:66: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2650:52: unsolved goals
case mpr
U : sorry
U' : sorry
h : sorry
X : sorry
⊢ sorry U' X → sorry U X
error: IndisputableMonolith.lean:2656:82: unexpected token ')'; expected command
error: IndisputableMonolith.lean:2682:38: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2682:60: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2683:37: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2685:16: Tactic `cases` failed with a nested error:
Tactic `induction` failed: recursor `Exists.casesOn` can only eliminate into `Prop`

B : sorry
X : sorry
h : ∃ U, meetsBandsChecker U X
⊢ sorry
error: IndisputableMonolith.lean:2689:68: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2694:66: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2696:24: Unknown identifier `Band.contains`
error: IndisputableMonolith.lean:2695:44: unsolved goals
U : sorry
U' : sorry
h : sorry
X : sorry
⊢ sorry () ↔ sorry ()
error: IndisputableMonolith.lean:2704:35: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2704:57: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:2705:73: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2711:35: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2713:2: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:2715:29: Unknown identifier `sampleBandsFor`
error: IndisputableMonolith.lean:2716:26: Unknown identifier `sampleBandsFor`
error: IndisputableMonolith.lean:2716:42: Unknown identifier `Band.contains`
error: IndisputableMonolith.lean:2716:57: Unknown identifier `wideBand`
error: IndisputableMonolith.lean:2717:4: Tactic `constructor` failed: target is not an inductive datatype

B : sorry
U : sorry
⊢ sorry ()
error: IndisputableMonolith.lean:2713:48: unsolved goals
B : sorry
U : sorry
hc : evalToBands_c U sorry
⊢ sorry
error: IndisputableMonolith.lean:2737:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:2743:35: Unknown identifier `RH.RS.PhiClosed`
error: IndisputableMonolith.lean:2757:21: unexpected token ':='; expected '}'
error: IndisputableMonolith.lean:2746:39: Unknown identifier `RH.RS.UniversalDimless`
error: IndisputableMonolith.lean:2761:43: Unknown identifier `RH.RS.Ledger`
error: IndisputableMonolith.lean:2761:62: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2761:80: Unknown identifier `RH.RS.DimlessPack`
error: IndisputableMonolith.lean:2774:37: Unknown identifier `RH.RS.Ledger`
error: IndisputableMonolith.lean:2774:56: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2775:2: Unknown identifier `RH.RS.Matches`
error: IndisputableMonolith.lean:2782:43: Unknown identifier `RH.RS.Ledger`
error: IndisputableMonolith.lean:2782:62: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2783:2: Unknown identifier `RH.RS.Matches`
error: IndisputableMonolith.lean:2786:19: Unknown identifier `eightTick_from_TruthCore`
error: IndisputableMonolith.lean:2786:55: Unknown identifier `born_from_TruthCore`
error: IndisputableMonolith.lean:2786:75: Unknown identifier `boseFermi_from_TruthCore`
error: IndisputableMonolith.lean:2782:8: (kernel) unknown constant 'IndisputableMonolith.Cost.RH.RS.Witness.matches_minimal'
error: IndisputableMonolith.lean:2789:48: Unknown identifier `RH.RS.Inevitability_dimless`
warning: IndisputableMonolith.lean:2805:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:2806:5: unused variable `γ`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2806:16: unused variable `PW`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2809:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:2810:5: unused variable `γ`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2810:16: unused variable `PW`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:2813:6: declaration uses 'sorry'
error: IndisputableMonolith.lean:2818:7: failed to infer 'have' declaration type
error: IndisputableMonolith.lean:2816:41: unsolved goals
γ : Type
PW : sorry
⊢ sorry
error: IndisputableMonolith.lean:2823:7: failed to infer 'have' declaration type
error: IndisputableMonolith.lean:2821:51: unsolved goals
γ : Type
PW : sorry
⊢ sorry
error: IndisputableMonolith.lean:2830:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:2837:19: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2837:38: Unknown identifier `RH.RS.HasRung`
error: IndisputableMonolith.lean:2843:14: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2843:33: Unknown identifier `RH.RS.FortyFiveGapHolds`
error: IndisputableMonolith.lean:2845:5: unknown namespace 'IndisputableMonolith.Gap45'
error: IndisputableMonolith.lean:2848:34: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2848:53: Unknown identifier `RH.RS.FortyFiveConsequences`
error: IndisputableMonolith.lean:2870:46: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:2871:9: Unknown identifier `RH.RS.FortyFiveConsequences`
error: IndisputableMonolith.lean:2874:2: unsolved goals
case h1
B : sorry
⊢ sorry ()
error: IndisputableMonolith.lean:2875:2: unsolved goals
case h2
B : sorry
⊢ sorry ()
error: IndisputableMonolith.lean:2876:2: unsolved goals
case h3
B : sorry
n : ℕ
hn : n ≥ 2
⊢ sorry ()
warning: IndisputableMonolith.lean:2874:10: declaration uses 'sorry'
warning: IndisputableMonolith.lean:2874:10: This simp argument is unused:
  IM_FortyFiveConsequences

Hint: Omit it from the simp argument list.
  simp ̵[̵I̵M̵_̵F̵o̵r̵t̵y̵F̵i̵v̵e̵C̵o̵n̵s̵e̵q̵u̵e̵n̵c̵e̵s̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:2875:10: This simp argument is unused:
  IM_FortyFiveConsequences

Hint: Omit it from the simp argument list.
  simp ̵[̵I̵M̵_̵F̵o̵r̵t̵y̵F̵i̵v̵e̵C̵o̵n̵s̵e̵q̵u̵e̵n̵c̵e̵s̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:2876:22: This simp argument is unused:
  IM_FortyFiveConsequences

Hint: Omit it from the simp argument list.
  simp [I̵M̵_̵F̵o̵r̵t̵y̵F̵i̵v̵e̵C̵o̵n̵s̵e̵q̵u̵e̵n̵c̵e̵s̵,̵ ̵hn]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:2876:48: This simp argument is unused:
  hn

Hint: Omit it from the simp argument list.
  simp [IM_FortyFiveConsequences,̵ ̵h̵n̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:2886:29: unexpected token 'namespace'; expected 'lemma'
error: IndisputableMonolith.lean:2923:45: unexpected token ','; expected ')'
error: IndisputableMonolith.lean:2958:8: expected '{' or indented tactic sequence
error: IndisputableMonolith.lean:2942:12: Unknown constant `Real.sqrt_lt'.mpr`
error: IndisputableMonolith.lean:2945:15: Unknown identifier `div_lt_div_right`
error: IndisputableMonolith.lean:2953:52: Unknown constant `neg_neg_of_pos.mpr`
error: IndisputableMonolith.lean:2957:95: unsolved goals
hφ : phi > 1
hpos : 0 < 2 * (2 / 3)
this : 0 < -(2 * (2 / 3))
hx : phi > 1
hx' : 1 < phi
⊢ 0 < -(2 * (2 / 3))
error: IndisputableMonolith.lean:2957:51: unsolved goals
hφ : phi > 1
hpos : 0 < 2 * (2 / 3)
this✝ : 0 < -(2 * (2 / 3))
hx : phi > 1
hx' : 1 < phi
this : 0 < -(2 * (2 / 3))
⊢ -(2 * (2 / 3)) < 0
error: IndisputableMonolith.lean:2949:37: unsolved goals
hφ : phi > 1
this : phi ^ (-(2 * (2 / 3))) < 1
⊢ 1 / 18 * phi ^ (-(2 * (2 / 3))) < 1 / 18
error: IndisputableMonolith.lean:2936:44: unsolved goals
hφ : phi > 1
hA : A2_QED < 1 / 18
⊢ convergent A2_QED
error: IndisputableMonolith.lean:2981:31: Type mismatch
  Nat.mul_le_mul_left ?m.143 (Nat.succ_le_of_lt hn)
has type
  ?m.143 * Nat.succ 0 ≤ ?m.143 * n
but is expected to have type
  2 * n ≥ 2
error: IndisputableMonolith.lean:2983:94: Expected type must not contain metavariables
  ?m.175 < 2 * n - 1
error: IndisputableMonolith.lean:2983:85: Application type mismatch: The argument
  this
has type
  2 - 1 ≤ 2 * n - 1
but is expected to have type
  0 ≤ ?m.175
in the application
  Nat.lt_of_le_of_lt this
error: IndisputableMonolith.lean:2985:80: Expected type must not contain free variables
  0 < 2 * n - 1

Hint: Use the `+revert` option to automatically clean up and revert free variables
error: IndisputableMonolith.lean:2986:6: Type mismatch
  pow_pos this ?m.230
has type
  (0 : ℕ) < (2 * n - 1) ^ ?m.230
but is expected to have type
  (0 : ℝ) < (1 - 2 * a2) ^ (2 * n - 1)
error: IndisputableMonolith.lean:2988:18: Application type mismatch: The argument
  this
has type
  (0 : ℕ) < 2
but is expected to have type
  (0 : ℝ) < 2
in the application
  mul_pos this
error: IndisputableMonolith.lean:3001:16: Invalid field `elim`: The environment does not contain `Nat.le.elim`
  this
has type
  (Nat.succ 0).le 1
error: IndisputableMonolith.lean:3010:12: Unknown constant `Real.sqrt_lt'.mpr`
error: IndisputableMonolith.lean:3013:15: Unknown identifier `div_lt_div_right`
error: IndisputableMonolith.lean:3022:33: Application type mismatch: The argument
  this
has type
  0 < 2 * (2 / 3)
but is expected to have type
  ?m.196 < 0
in the application
  neg_pos.mpr this
error: IndisputableMonolith.lean:3023:50: Application type mismatch: The argument
  hneg
has type
  0 < -(2 * (2 / 3))
but is expected to have type
  -(2 * (2 / 3)) < 0
in the application
  rpow_lt_one_of_one_lt_of_neg hx' hneg
error: IndisputableMonolith.lean:3030:4: Type mismatch: After simplification, term
  this
 has type
  x + x < y + y
but is expected to have type
  y + y < x + x
error: IndisputableMonolith.lean:3031:57: Application type mismatch: The argument
  hA
has type
  A2_QCD < 2 / 9
but is expected to have type
  2 / 9 < A2_QCD
in the application
  hmono hA
error: IndisputableMonolith.lean:3032:48: Tactic `assumption` failed

hφ : phi > 1
hA : A2_QCD < 2 / 9
hmono : StrictMono fun x => 1 - 2 * x
this : A2_QCD + A2_QCD < 2 / 9 + 2 / 9
⊢ A2_QCD + A2_QCD < 4 / 9
error: IndisputableMonolith.lean:3035:4: Tactic `assumption` failed

hφ : phi > 1
hA : A2_QCD < 2 / 9
hmono : StrictMono fun x => 1 - 2 * x
this✝¹ : 1 - 2 * A2_QCD > 1 - 2 * (2 / 9)
this✝ : 1 - 2 * A2_QCD > 1 - 4 / 9
this : True
⊢ 5 / 9 < 1 - 2 * A2_QCD
error: IndisputableMonolith.lean:3036:2: Type mismatch
  this
has type
  1 - 2 * A2_QCD > 5 / 9
but is expected to have type
  convergent A2_QCD
warning: IndisputableMonolith.lean:3039:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:3044:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3047:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3051:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3043:6: 'unfold IndisputableMonolith.Constants.phi' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3044:6: 'have : (Real.sqrt 5) > 1 := by
  have : (5 : ℝ) > 1 := by norm_num
  exact Real.sqrt_lt'.mpr (And.intro (by norm_num) this)' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3047:6: 'have : (1 + Real.sqrt 5) / 2 > (1 + 1) / 2 :=
  by
  have := add_lt_add_left this 1
  have := (div_lt_div_right (by norm_num : (0 : ℝ) < 2)).mpr this
  simpa using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3051:6: 'simpa using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3060:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:3065:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3068:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3072:6: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3064:6: 'unfold IndisputableMonolith.Constants.phi' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3065:6: 'have : (Real.sqrt 5) > 1 := by
  have : (5 : ℝ) > 1 := by norm_num
  exact Real.sqrt_lt'.mpr (And.intro (by norm_num) this)' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3068:6: 'have : (1 + Real.sqrt 5) / 2 > (1 + 1) / 2 :=
  by
  have := add_lt_add_left this 1
  have := (div_lt_div_right (by norm_num : (0 : ℝ) < 2)).mpr this
  simpa using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3072:6: 'simpa using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
error: IndisputableMonolith.lean:3083:2: Function expected at
  sigmaN
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  n
error: IndisputableMonolith.lean:3085:9: Tactic `unfold` failed: Local variable `sigmaN` has no definition
error: IndisputableMonolith.lean:3089:2: Function expected at
  sigmaN
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  n
error: IndisputableMonolith.lean:3091:9: Tactic `unfold` failed: Local variable `sigmaN` has no definition
error: IndisputableMonolith.lean:3097:6: Function expected at
  sigmaN
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  n
error: IndisputableMonolith.lean:3109:6: Function expected at
  sigmaN
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  n
error: IndisputableMonolith.lean:3120:31: Function expected at
  sigmaN
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  1
error: IndisputableMonolith.lean:3136:40: invalid 'by' tactic, expected type has not been provided
error: IndisputableMonolith.lean:3120:66: unsolved goals
x✝ : Sort u_1
sigmaN : x✝
this : 0 < A2_QCD
⊢ 0 < sorry
error: IndisputableMonolith.lean:3142:0: Unexpected name `VoxelWalks` after `end`: The current section is unnamed

Hint: Delete the name `VoxelWalks` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵V̵o̵x̵e̵l̵W̵a̵l̵k̵s̵
error: IndisputableMonolith.lean:3143:0: Unexpected name `IndisputableMonolith` after `end`: The current section is unnamed

Hint: Delete the name `IndisputableMonolith` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵n̵d̵i̵s̵p̵u̵t̵a̵b̵l̵e̵M̵o̵n̵o̵l̵i̵t̵h̵
error: IndisputableMonolith.lean:3153:65: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3153:89: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:3153:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3170:2: Invalid dotted identifier notation: The expected type of `.lepton`
  SectorB
is not of the form `C ...` or `... → C ...` where C is a constant
warning: IndisputableMonolith.lean:3169:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3225:4: expected '{' or indented tactic sequence
error: IndisputableMonolith.lean:3224:78: unsolved goals
a b c : ℝ
hc : c ≠ 0
h : a = c * b
⊢ a = b * c⁻¹
error: IndisputableMonolith.lean:3221:66: unsolved goals
case intro.intro
a b c : ℝ
hc : c ≠ 0
h : a = c * b
this : a = 1 / c * b
⊢ b = 1 / c * a
warning: IndisputableMonolith.lean:3232:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:3236:11: Unknown constant `Derivation.massCanonUnits`
error: IndisputableMonolith.lean:3237:38: Unknown constant `Derivation.massCanonPure`
error: IndisputableMonolith.lean:3237:12: Function expected at
  yardstick
but this term has type
  ?m.3

Note: Expected a function because this term is being applied to the argument
  U
error: IndisputableMonolith.lean:3238:35: Unknown constant `Derivation.massCanonUnits`
error: IndisputableMonolith.lean:3238:62: Unknown constant `Derivation.massCanonPure`
error: IndisputableMonolith.lean:3238:26: unsolved goals
SectorParams : Sort u_1
Species : Sort u_2
x✝ : Sort u_3
yardstick : x✝
U : sorry
P : SectorParams
i : Species
⊢ sorry () = sorry () * sorry ()
warning: IndisputableMonolith.lean:3238:88: This simp argument is unused:
  mul_comm

Hint: Omit it from the simp argument list.
  simp [Derivation.massCanonUnits, Derivation.massCanonPure,
  ̲ m̵u̵l̵_̵c̵o̵m̵m̵,̵  ̲ ̲mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3238:98: This simp argument is unused:
  mul_left_comm

Hint: Omit it from the simp argument list.
  simp [Derivation.massCanonUnits, Derivation.massCanonPure, mul_comm,
  ̲  ̲ ̲ ̲m̵u̵l̵_̵l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3238:113: This simp argument is unused:
  mul_assoc

Hint: Omit it from the simp argument list.
  simp [Derivation.massCanonUnits, Derivation.massCanonPure, mul_comm,
  ̲  ̲ ̲ ̲mul_left_comm,̵ ̵m̵u̵l̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:3243:11: Function expected at
  yardstick
but this term has type
  ?m.3

Note: Expected a function because this term is being applied to the argument
  U
error: IndisputableMonolith.lean:3243:37: Function expected at
  massCanon
but this term has type
  ?m.4

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:3244:12: Function expected at
  yardstick
but this term has type
  ?m.3

Note: Expected a function because this term is being applied to the argument
  U
error: IndisputableMonolith.lean:3244:38: Function expected at
  massCanon
but this term has type
  ?m.4

Note: Expected a function because this term is being applied to the argument
  j
error: IndisputableMonolith.lean:3245:11: Function expected at
  massCanon
but this term has type
  ?m.4

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:3245:25: Function expected at
  massCanon
but this term has type
  ?m.4

Note: Expected a function because this term is being applied to the argument
  j
warning: IndisputableMonolith.lean:3246:30: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:3246:30: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:3260:9: Unknown identifier `Ribbons.Word`
error: IndisputableMonolith.lean:3261:12: Unknown identifier `Ribbons.normalForm`
error: IndisputableMonolith.lean:3264:27: Unknown constant `Derivation.GenClass`
error: IndisputableMonolith.lean:3265:2: Unknown constant `Derivation.rungOf`
warning: IndisputableMonolith.lean:3264:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3268:45: Unknown constant `Derivation.GenClass`
error: IndisputableMonolith.lean:3284:9: Unknown identifier `Ribbons.Word`
error: IndisputableMonolith.lean:3285:14: Unknown identifier `Ribbons.Z_of_charge`
error: IndisputableMonolith.lean:3285:73: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3289:8: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3290:4: Invalid pattern variable: Variable name must be atomic, but 'Recognition.Sector.up' has multiple components
warning: IndisputableMonolith.lean:3288:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3296:2: Unknown identifier `Ribbons.Z_of_charge`
error: IndisputableMonolith.lean:3296:61: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3297:20: Unknown identifier `Ribbons.Z_of_charge`
error: IndisputableMonolith.lean:3297:41: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3298:2: No goals to be solved
error: IndisputableMonolith.lean:3302:2: invalid {...} notation, expected type is not of the form (C ...)
  Spec
error: IndisputableMonolith.lean:3332:5: unknown namespace 'IndisputableMonolith.Constants'
error: IndisputableMonolith.lean:3340:51: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
warning: IndisputableMonolith.lean:3339:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3344:17: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
warning: IndisputableMonolith.lean:3343:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3348:13: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
warning: IndisputableMonolith.lean:3347:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3352:0: invalid {...} notation, expected type is not of the form (C ...)
  FixedPointSpec
warning: IndisputableMonolith.lean:3351:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3358:20: Invalid argument name `S` for function
error: IndisputableMonolith.lean:3366:28: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3369:9: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3370:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3370:46: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3366:65: unsolved goals
k : ℕ
r0 r Z : ℤ
⊢ sorry () * (1 / phi ^ 5) * sorry () * sorry () = sorry () * (sorry () * (1 / phi ^ 5) * sorry () * sorry ())
error: IndisputableMonolith.lean:3376:28: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3378:9: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3379:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3379:46: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3376:72: unsolved goals
r Δ Z : ℤ
⊢ 1 / phi ^ 5 * sorry () = sorry () * (1 / phi ^ 5 * sorry ())
error: IndisputableMonolith.lean:3386:61: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3392:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
warning: IndisputableMonolith.lean:3391:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3396:20: Invalid argument name `S` for function
error: IndisputableMonolith.lean:3403:28: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3405:9: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3406:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3406:46: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3403:65: unsolved goals
r Z : ℤ
⊢ 1 / phi ^ 5 * sorry () = sorry () * (1 / phi ^ 5 * sorry ())
error: IndisputableMonolith.lean:3412:31: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3414:9: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3415:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3415:46: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3412:71: unsolved goals
U : sorry
r Z : ℤ
⊢ sorry () * sorry () = sorry () * (sorry () * sorry ())
error: IndisputableMonolith.lean:3420:27: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3421:17: Unknown constant `IndisputableMonolith.Recognition.r`
error: IndisputableMonolith.lean:3421:35: Unknown constant `IndisputableMonolith.Recognition.Z`
warning: IndisputableMonolith.lean:3420:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3423:34: Unknown constant `IndisputableMonolith.Recognition.Species`
warning: IndisputableMonolith.lean:3423:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3424:36: Unknown constant `IndisputableMonolith.Recognition.Species`
warning: IndisputableMonolith.lean:3424:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3425:38: Unknown constant `IndisputableMonolith.Recognition.Species`
warning: IndisputableMonolith.lean:3425:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3427:30: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3428:3: Unknown constant `IndisputableMonolith.Recognition.r`
error: IndisputableMonolith.lean:3428:26: Unknown identifier `F_ofZ`
warning: IndisputableMonolith.lean:3427:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3432:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3435:11: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3436:13: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3436:50: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3432:64: unsolved goals
r₁ r₂ Z₁ Z₂ : ℤ
⊢ 1 / phi ^ 5 * sorry () / (1 / phi ^ 5 * sorry ()) = sorry ()
error: IndisputableMonolith.lean:3442:41: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3442:41: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3443:8: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3443:26: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3444:37: Unknown constant `IndisputableMonolith.Recognition.r`
error: IndisputableMonolith.lean:3444:61: Unknown constant `IndisputableMonolith.Recognition.r`
warning: IndisputableMonolith.lean:3446:8: This simp argument is unused:
  hZ

Hint: Omit it from the simp argument list.
  simp [h̵Z̵,̵ ̵sub_eq_add_neg, add_comm, add_left_comm, add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3446:12: This simp argument is unused:
  sub_eq_add_neg

Hint: Omit it from the simp argument list.
  simp [hZ, s̵u̵b̵_̵e̵q̵_̵a̵d̵d̵_̵n̵e̵g̵,̵ ̵add_comm, add_left_comm, add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3446:28: This simp argument is unused:
  add_comm

Hint: Omit it from the simp argument list.
  simp [hZ, sub_eq_add_neg, add_c̵o̵m̵m̵,̵ ̵a̵d̵d̵_̵left_comm, add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3446:38: This simp argument is unused:
  add_left_comm

Hint: Omit it from the simp argument list.
  simp [hZ, sub_eq_add_neg, add_comm, a̵d̵d̵_̵l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵add_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:3446:53: This simp argument is unused:
  add_assoc

Hint: Omit it from the simp argument list.
  simp [hZ, sub_eq_add_neg, add_comm, add_left_comm,̵ ̵a̵d̵d̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:3449:39: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3449:39: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3450:8: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3450:26: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3451:2: Function expected at
  F_ofZ
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  (Recognition.Z i)
error: IndisputableMonolith.lean:3451:28: Function expected at
  F_ofZ
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  (Recognition.Z j)
warning: IndisputableMonolith.lean:3452:8: This simp argument is unused:
  hZ

Hint: Omit it from the simp argument list.
  simp ̵[̵h̵Z̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:3455:29: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3455:29: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3457:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3460:41: Unknown constant `IndisputableMonolith.Recognition.r`
error: IndisputableMonolith.lean:3460:65: Unknown constant `IndisputableMonolith.Recognition.r`
error: IndisputableMonolith.lean:3461:11: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3461:35: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3464:36: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3464:36: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3465:8: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3465:26: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3467:4: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3470:9: Unknown identifier `massExponent_diff_of_equalZ`
error: IndisputableMonolith.lean:3474:18: Unknown constant `IndisputableMonolith.Recognition.Species.c`
error: IndisputableMonolith.lean:3474:59: Unknown constant `IndisputableMonolith.Recognition.Species.u`
error: IndisputableMonolith.lean:3475:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3477:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3481:18: Unknown constant `IndisputableMonolith.Recognition.Species.t`
error: IndisputableMonolith.lean:3481:59: Unknown constant `IndisputableMonolith.Recognition.Species.c`
error: IndisputableMonolith.lean:3482:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3484:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3488:18: Unknown constant `IndisputableMonolith.Recognition.Species.s`
error: IndisputableMonolith.lean:3488:59: Unknown constant `IndisputableMonolith.Recognition.Species.d`
error: IndisputableMonolith.lean:3489:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3491:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3495:18: Unknown constant `IndisputableMonolith.Recognition.Species.b`
error: IndisputableMonolith.lean:3495:59: Unknown constant `IndisputableMonolith.Recognition.Species.s`
error: IndisputableMonolith.lean:3496:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3498:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3501:18: Unknown constant `IndisputableMonolith.Recognition.Species.mu`
error: IndisputableMonolith.lean:3501:60: Unknown constant `IndisputableMonolith.Recognition.Species.e`
error: IndisputableMonolith.lean:3502:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3504:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3508:18: Unknown constant `IndisputableMonolith.Recognition.Species.tau`
error: IndisputableMonolith.lean:3508:61: Unknown constant `IndisputableMonolith.Recognition.Species.mu`
error: IndisputableMonolith.lean:3509:6: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
error: IndisputableMonolith.lean:3511:8: Unknown identifier `massCanon_ratio_equalZ`
error: IndisputableMonolith.lean:3515:30: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3516:2: Unknown constant `IndisputableMonolith.Recognition.PhiPow`
warning: IndisputableMonolith.lean:3515:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3519:37: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3519:37: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3520:8: Unknown constant `IndisputableMonolith.Recognition.Z`
error: IndisputableMonolith.lean:3520:26: Unknown constant `IndisputableMonolith.Recognition.Z`
warning: IndisputableMonolith.lean:3522:22: This simp argument is unused:
  hZ

Hint: Omit it from the simp argument list.
  simp [canonResidue,̵ ̵h̵Z̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:3526:21: Unknown constant `IndisputableMonolith.Recognition.Species.u`
error: IndisputableMonolith.lean:3527:25: Unknown constant `IndisputableMonolith.Recognition.Species.c`
error: IndisputableMonolith.lean:3528:23: Unknown constant `IndisputableMonolith.Recognition.Species.c`
error: IndisputableMonolith.lean:3529:25: Unknown constant `IndisputableMonolith.Recognition.Species.t`
error: IndisputableMonolith.lean:3530:12: Unknown constant `IndisputableMonolith.Recognition.equalZ_up_family`
error: IndisputableMonolith.lean:3529:51: unsolved goals
⊢ canonResidue sorry = canonResidue sorry ∧ canonResidue sorry = canonResidue sorry
error: IndisputableMonolith.lean:3537:21: Unknown constant `IndisputableMonolith.Recognition.Species.d`
error: IndisputableMonolith.lean:3538:25: Unknown constant `IndisputableMonolith.Recognition.Species.s`
error: IndisputableMonolith.lean:3539:23: Unknown constant `IndisputableMonolith.Recognition.Species.s`
error: IndisputableMonolith.lean:3540:25: Unknown constant `IndisputableMonolith.Recognition.Species.b`
error: IndisputableMonolith.lean:3541:12: Unknown constant `IndisputableMonolith.Recognition.equalZ_down_family`
error: IndisputableMonolith.lean:3540:51: unsolved goals
⊢ canonResidue sorry = canonResidue sorry ∧ canonResidue sorry = canonResidue sorry
error: IndisputableMonolith.lean:3548:21: Unknown constant `IndisputableMonolith.Recognition.Species.e`
error: IndisputableMonolith.lean:3549:25: Unknown constant `IndisputableMonolith.Recognition.Species.mu`
error: IndisputableMonolith.lean:3550:23: Unknown constant `IndisputableMonolith.Recognition.Species.mu`
error: IndisputableMonolith.lean:3551:25: Unknown constant `IndisputableMonolith.Recognition.Species.tau`
error: IndisputableMonolith.lean:3552:12: Unknown constant `IndisputableMonolith.Recognition.equalZ_lepton_family`
error: IndisputableMonolith.lean:3551:53: unsolved goals
⊢ canonResidue sorry = canonResidue sorry ∧ canonResidue sorry = canonResidue sorry
error: IndisputableMonolith.lean:3558:34: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3559:8: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3560:4: Invalid pattern variable: Variable name must be atomic, but 'Recognition.Sector.up' has multiple components
warning: IndisputableMonolith.lean:3558:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3566:40: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3567:7: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3567:30: Unknown constant `IndisputableMonolith.Recognition.Sector.up`
error: IndisputableMonolith.lean:3572:42: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3573:7: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3573:30: Unknown constant `IndisputableMonolith.Recognition.Sector.down`
error: IndisputableMonolith.lean:3578:38: Unknown constant `IndisputableMonolith.Recognition.Species`
error: IndisputableMonolith.lean:3579:7: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3579:30: Unknown constant `IndisputableMonolith.Recognition.Sector.lepton`
error: IndisputableMonolith.lean:3579:58: Unknown constant `IndisputableMonolith.Recognition.sector`
error: IndisputableMonolith.lean:3579:81: Unknown constant `IndisputableMonolith.Recognition.Sector.neutrino`
error: IndisputableMonolith.lean:3634:33: failed to synthesize
  LT (GaugeTag × Tick × Bool × ℤ)

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:3657:42: unexpected token '/--'; expected 'lemma'
error: IndisputableMonolith.lean:3665:42: Unknown constant `Derivation.GenClass`
error: IndisputableMonolith.lean:3667:9: Unknown constant `Derivation.GenClass.g1`
error: IndisputableMonolith.lean:3668:9: Unknown constant `Derivation.GenClass.g2`
error: IndisputableMonolith.lean:3669:9: Unknown constant `Derivation.GenClass.g3`
warning: IndisputableMonolith.lean:3665:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3672:28: Unknown constant `Derivation.GenClass`
error: IndisputableMonolith.lean:3673:2: Unknown constant `Derivation.rungOf`
warning: IndisputableMonolith.lean:3672:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3681:9: Unknown constant `Derivation.GenClass`
warning: IndisputableMonolith.lean:3680:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:3704:37: typeclass instance problem is stuck, it is often due to metavariables
  Module ?m.36 ?m.43
error: IndisputableMonolith.lean:3718:47: Type mismatch
  MatrixBridge ι K V
has type
  Prop
of sort `Type` but is expected to have type
  Type ?u.241006
of sort `Type (?u.241006 + 1)`
error: IndisputableMonolith.lean:3729:32: Type mismatch
  MatrixBridge (Fin 3) K constantStochastic3x3
has type
  Prop
of sort `Type` but is expected to have type
  Type ?u.249451
of sort `Type (?u.249451 + 1)`
warning: IndisputableMonolith.lean:3746:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:3750:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:3748:12: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3749:12: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3751:4: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3748:12: 'have := (Finset.sum_const (a := (1 / 3 : ℝ)) (s := (Finset.univ : Finset (Fin 3))))' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3749:12: 'simpa [h] using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3751:4: 'simpa [Fintype.card_fin, Nat.cast_ofNat] using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
error: IndisputableMonolith.lean:3754:29: No goals to be solved
warning: IndisputableMonolith.lean:3760:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:3765:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:3762:8: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3763:8: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3764:8: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:3762:8: 'have := Finset.sum_const (a := (1 / 3 : ℝ)) (s := (Finset.univ : Finset (Fin 3)))' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3763:8: 'have : (Finset.univ : Finset (Fin 3)).card = 3 := by simp [Finset.card_univ, Fintype.card_fin]' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:3764:8: 'simpa [this, Nat.cast_ofNat] using this' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
error: IndisputableMonolith.lean:3769:4: Unknown identifier `YM.Dobrushin.TVContractionMarkov`
warning: IndisputableMonolith.lean:3776:16: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:3778:10: Unknown identifier `YM.tv_contract_of_uniform_overlap`
error: IndisputableMonolith.lean:3771:18: unsolved goals
hβpos : 0 < 1
hβle : 1 ≤ 1
hover : ∀ (i i' : Fin 3), 1 ≤ ∑ j, min (Aconst3 i j) (Aconst3 i' j)
⊢ sorry
error: IndisputableMonolith.lean:3821:93: Application type mismatch: The argument
  K
has type
  Kernel
but is expected to have type
  LatticeMeasure
in the application
  TransferPFGap K
error: IndisputableMonolith.lean:3821:80: Invalid argument name `μ` for function `TransferPFGap`

Hint: Perhaps you meant one of the following parameter names:
  • `_μ`: _̲μ
  • `_K`: μ̵_̲K̲
  • `γ`: μ̵γ̲
warning: IndisputableMonolith.lean:3827:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:3828:5: unused variable `hOS`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:3828:28: unused variable `hPF`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:3836:0: Unexpected name `YM.OS` after `end`: The current section is unnamed

Hint: Delete the name `YM.OS` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵Y̵M̵.̵O̵S̵
error: IndisputableMonolith.lean:3846:24: Unknown identifier `Dobrushin.MarkovKernel`
error: IndisputableMonolith.lean:3847:14: Unknown identifier `Dobrushin.overlap`
error: IndisputableMonolith.lean:3851:50: Unknown identifier `Dobrushin.MarkovKernel`
error: IndisputableMonolith.lean:3854:4: Unknown identifier `Dobrushin.TVContractionMarkov`
error: IndisputableMonolith.lean:3856:9: Unknown identifier `Dobrushin.tv_contraction_from_overlap_lb`
error: IndisputableMonolith.lean:3857:2: No goals to be solved
error: IndisputableMonolith.lean:3883:19: Unknown identifier `min_nonneg`
error: IndisputableMonolith.lean:3888:10: don't know how to synthesize implicit argument 's'
  @Finset.sum_le_sum ι ℝ instAddCommMonoid partialOrder instIsOrderedAddMonoid (fun j => min (K.P i j) (K.P i' j))
    (K.P i) ?m.38 fun j x => hle j
context:
ι : Type
inst✝ : Fintype ι
K : MarkovKernel ι
i i' : ι
hle : ∀ (j : ι), min (K.P i j) (K.P i' j) ≤ K.P i j
⊢ Finset ι
error: IndisputableMonolith.lean:3888:35: Failed to infer binder type
error: IndisputableMonolith.lean:3888:7: failed to infer 'have' declaration type
error: IndisputableMonolith.lean:3885:77: unsolved goals
ι : Type
inst✝ : Fintype ι
K : MarkovKernel ι
i i' : ι
hle : ∀ (j : ι), min (K.P i j) (K.P i' j) ≤ K.P i j
⊢ overlap K i i' ≤ 1
warning: IndisputableMonolith.lean:3891:25: unused variable `K`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:3895:5: unused variable `hβ`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:3931:20: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3931:40: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:3933:15: Unknown identifier `Constants.phi_fixed_point`
error: IndisputableMonolith.lean:3931:61: unsolved goals
⊢ sorry ^ 2 = sorry + 1
error: IndisputableMonolith.lean:3943:0: Unexpected name `IndisputableMonolith` after `end`: The current section is unnamed

Hint: Delete the name `IndisputableMonolith` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵n̵d̵i̵s̵p̵u̵t̵a̵b̵l̵e̵M̵o̵n̵o̵l̵i̵t̵h̵
error: IndisputableMonolith.lean:3969:49: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  a
error: IndisputableMonolith.lean:3975:12: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  b
error: IndisputableMonolith.lean:3981:13: Unknown identifier `prefer_refl`
error: IndisputableMonolith.lean:3982:14: Unknown identifier `prefer_trans`
error: IndisputableMonolith.lean:3988:25: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  a'
error: IndisputableMonolith.lean:3994:12: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  a₂
error: IndisputableMonolith.lean:4000:50: Function expected at
  Composable
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  M
error: IndisputableMonolith.lean:4005:27: Unknown identifier `Measurement.CQ`
error: IndisputableMonolith.lean:4006:18: Unknown identifier `Measurement.score`
error: IndisputableMonolith.lean:4009:35: Unknown identifier `Measurement.CQ`
error: IndisputableMonolith.lean:4012:105: unexpected token '/--'; expected 'lemma'
error: IndisputableMonolith.lean:4015:58: Unknown identifier `Measurement.CQ`
error: IndisputableMonolith.lean:4015:58: Unknown identifier `Measurement.CQ`
error: IndisputableMonolith.lean:4017:37: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  b
error: IndisputableMonolith.lean:4022:53: Unknown identifier `Measurement.CQ`
error: IndisputableMonolith.lean:4025:84: Function expected at
  [M]
but this term has type
  List (CostModel A)

Note: Expected a function because this term is being applied to the argument
  b
error: IndisputableMonolith.lean:4025:81: Application type mismatch: The argument
  a
has type
  A
but is expected to have type
  CostModel ?m.1
in the application
  Prefer a
error: IndisputableMonolith.lean:4034:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:4040:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:4046:1: expected token
error: IndisputableMonolith.lean:4049:1: expected token
error: IndisputableMonolith.lean:4061:1: expected token
warning: IndisputableMonolith.lean:4058:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:4066:26: linarith failed to find a contradiction
case pos.h
c c' : CQ
h : c.listensPerSec ≤ c'.listensPerSec
hcoh : c.coherence8 = c'.coherence8
hops : 0 = c'.opsPerSec
hc : True
a✝ : (if c'.opsPerSec = 0 then 0 else c'.listensPerSec / c'.opsPerSec * c'.coherence8 / sorry ()) < 0
⊢ False
failed
error: IndisputableMonolith.lean:4067:35: unsolved goals
c c' : CQ
h : c.listensPerSec ≤ c'.listensPerSec
hops : c.opsPerSec = c'.opsPerSec
hcoh : c.coherence8 = c'.coherence8
hc : ¬c.opsPerSec = 0
⊢ ¬c'.opsPerSec = 0
error: IndisputableMonolith.lean:4069:6: Unknown identifier `div_le_div_of_le_left`
error: IndisputableMonolith.lean:4067:2: unsolved goals
case neg
c c' : CQ
h : c.listensPerSec ≤ c'.listensPerSec
hops : c.opsPerSec = c'.opsPerSec
hcoh : c.coherence8 = c'.coherence8
hc : ¬c.opsPerSec = 0
hc' : c'.opsPerSec ≠ 0
hlist : c.listensPerSec / c.opsPerSec ≤ c'.listensPerSec / c.opsPerSec
⊢ c.listensPerSec / c'.opsPerSec * c'.coherence8 / sorry () ≤ c'.listensPerSec / c'.opsPerSec * c'.coherence8 / sorry ()
warning: IndisputableMonolith.lean:4066:14: This simp argument is unused:
  hops

Hint: Omit it from the simp argument list.
  simp [hc,̵ ̵h̵o̵p̵s̵] at *

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4067:44: This simp argument is unused:
  hops

Hint: Omit it from the simp argument list.
  simp [ho̵p̵s̵,̵ ̵h̵c]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4067:50: This simp argument is unused:
  hc

Hint: Omit it from the simp argument list.
  simp [hops,̵ ̵h̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4070:29: This simp argument is unused:
  hc

Hint: Omit it from the simp argument list.
  simp [Measurement.score, hc,̵ ̵h̵c̵', hops, hcoh, hlist]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4070:50: This simp argument is unused:
  hlist

Hint: Omit it from the simp argument list.
  simp [Measurement.score, hc, hc', hops, hcoh,̵ ̵h̵l̵i̵s̵t̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:4072:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:4077:26: linarith failed to find a contradiction
case pos.h
c c' : CQ
h : c.coherence8 ≤ c'.coherence8
hlist : c.listensPerSec = c'.listensPerSec
hops : 0 = c'.opsPerSec
hc : True
a✝ : (if c'.opsPerSec = 0 then 0 else c'.listensPerSec / c'.opsPerSec * c'.coherence8 / sorry ()) < 0
⊢ False
failed
error: IndisputableMonolith.lean:4078:35: unsolved goals
c c' : CQ
h : c.coherence8 ≤ c'.coherence8
hlist : c.listensPerSec = c'.listensPerSec
hops : c.opsPerSec = c'.opsPerSec
hc : ¬c.opsPerSec = 0
⊢ ¬c'.opsPerSec = 0
error: IndisputableMonolith.lean:4078:2: unsolved goals
case neg
c c' : CQ
h : c.coherence8 ≤ c'.coherence8
hlist : c.listensPerSec = c'.listensPerSec
hops : c.opsPerSec = c'.opsPerSec
hc : ¬c.opsPerSec = 0
hc' : c'.opsPerSec ≠ 0
⊢ c'.listensPerSec / c'.opsPerSec * c.coherence8 / sorry () ≤ c'.listensPerSec / c'.opsPerSec * c'.coherence8 / sorry ()
warning: IndisputableMonolith.lean:4077:14: This simp argument is unused:
  hops

Hint: Omit it from the simp argument list.
  simp [hc,̵ ̵h̵o̵p̵s̵] at *

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4078:44: This simp argument is unused:
  hops

Hint: Omit it from the simp argument list.
  simp [ho̵p̵s̵,̵ ̵h̵c]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4078:50: This simp argument is unused:
  hc

Hint: Omit it from the simp argument list.
  simp [hops,̵ ̵h̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4079:29: This simp argument is unused:
  hc

Hint: Omit it from the simp argument list.
  simp [Measurement.score, hc,̵ ̵h̵c̵', hlist, hops, h]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4079:51: This simp argument is unused:
  h

Hint: Omit it from the simp argument list.
  simp [Measurement.score, hc, hc', hlist, hops,̵ ̵h̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:4125:6: Type mismatch: After simplification, term
  h2
 has type
  y ≤ I.hi - I.lo + x
but is expected to have type
  I.lo ≤ x - y + I.hi
error: IndisputableMonolith.lean:4144:33: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4144:48: Function expected at
  Fgap
but this term has type
  ?m.6

Note: Expected a function because this term is being applied to the argument
  (Z i)
error: IndisputableMonolith.lean:4146:5: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4146:57: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4154:26: Function expected at
  Fgap
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  (Z i)
error: IndisputableMonolith.lean:4154:51: Function expected at
  Z
but this term has type
  ?m.3

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:4157:21: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4160:18: Function expected at
  Fgap
but this term has type
  x✝¹

Note: Expected a function because this term is being applied to the argument
  (Z i)
error: IndisputableMonolith.lean:4160:39: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4161:47: Application type mismatch: The argument
  i
has type
  Species
of sort `Sort u_1` but is expected to have type
  ?m.80
of sort `Sort u_4` in the application
  hC.Fgap_in i
error: IndisputableMonolith.lean:4169:24: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:4169:30: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  j
error: IndisputableMonolith.lean:4170:31: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:4171:18: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4174:18: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4177:34: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4178:21: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4187:27: Unknown identifier `Fgap`
error: IndisputableMonolith.lean:4187:45: Unknown identifier `Fgap`
error: IndisputableMonolith.lean:4188:21: Unknown identifier `Fgap`
error: IndisputableMonolith.lean:4197:50: `simp` made no progress
error: IndisputableMonolith.lean:4199:44: Tactic `constructor` failed: target is not an inductive datatype

i : Sort u_1
⊢ ∀ (i : i), sorry () ≤ sorry () ∧ sorry () ≤ sorry ()
warning: IndisputableMonolith.lean:4195:23: declaration uses 'sorry'
error: IndisputableMonolith.lean:4205:25: Function expected at
  Fgap
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  (Z i)
error: IndisputableMonolith.lean:4210:13: Function expected at
  Fgap
but this term has type
  x✝

Note: Expected a function because this term is being applied to the argument
  (Z i)
error: IndisputableMonolith.lean:4211:21: Function expected at
  Fgap
but this term has type
  x✝

Note: Expected a function because this term is being applied to the argument
  (Z i)
warning: IndisputableMonolith.lean:4246:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:4252:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:4276:27: Unknown constant `Nat.coprime.mul_dvd_of_dvd_of_dvd`
error: IndisputableMonolith.lean:4282:4: Type mismatch: After simplification, term
  hnpos
 has type
  0 < n
but is expected to have type
  False
error: IndisputableMonolith.lean:4342:4: Type mismatch: After simplification, term
  hnpos
 has type
  0 < n
but is expected to have type
  False
warning: IndisputableMonolith.lean:4375:38: `structure ... :=` has been deprecated in favor of `structure ... where`.

Note: This linter can be disabled with `set_option linter.deprecated false`
warning: IndisputableMonolith.lean:4380:40: `structure ... :=` has been deprecated in favor of `structure ... where`.

Note: This linter can be disabled with `set_option linter.deprecated false`
error: IndisputableMonolith.lean:4398:58: Invalid argument name `g` for function `orderOf_dvd_iff_pow_eq_one`

Hint: Perhaps you meant one of the following parameter names:
  • `G`: g̵G̲
  • `x`: g̵x̲
error: IndisputableMonolith.lean:4399:60: Invalid argument name `g` for function `orderOf_dvd_iff_pow_eq_one`

Hint: Perhaps you meant one of the following parameter names:
  • `G`: g̵G̲
  • `x`: g̵x̲
error: IndisputableMonolith.lean:4415:67: Invalid argument name `a` for function `addOrderOf_dvd_iff_nsmul_eq_zero`

Hint: Perhaps you meant one of the following parameter names:
  • `G`: a̵G̲
  • `x`: a̵x̲
error: IndisputableMonolith.lean:4416:69: Invalid argument name `a` for function `addOrderOf_dvd_iff_nsmul_eq_zero`

Hint: Perhaps you meant one of the following parameter names:
  • `G`: a̵G̲
  • `x`: a̵x̲
error: IndisputableMonolith.lean:4420:20: Unknown identifier `addOrderOf_eq_one_iff.mpr`
error: IndisputableMonolith.lean:4435:10: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.Interval' has already been declared
error: IndisputableMonolith.lean:4439:12: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.memI' has already been declared
error: IndisputableMonolith.lean:4441:12: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.width' has already been declared
error: IndisputableMonolith.lean:4444:6: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.abs_sub_le_width_of_memI' has already been declared
error: IndisputableMonolith.lean:4471:10: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert' has already been declared
error: IndisputableMonolith.lean:4478:12: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.Igap' has already been declared
error: IndisputableMonolith.lean:4484:10: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.Valid' has already been declared
error: IndisputableMonolith.lean:4491:6: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.M0_pos_of_cert' has already been declared
error: IndisputableMonolith.lean:4494:6: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.anchorIdentity_cert' has already been declared
error: IndisputableMonolith.lean:4511:24: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:4511:30: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  j
error: IndisputableMonolith.lean:4512:31: Function expected at
  Z
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:4513:18: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4516:18: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4519:34: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4520:21: Invalid field `Igap`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.AnchorCert.Igap`
  C
has type
  AnchorCert
error: IndisputableMonolith.lean:4527:18: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.zeroWidthCert' has already been declared
error: IndisputableMonolith.lean:4535:6: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.zeroWidthCert_valid' has already been declared
error: IndisputableMonolith.lean:4545:6: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.anchorIdentity_of_zeroWidthCert' has already been declared
error: IndisputableMonolith.lean:4558:0: Missing name after `end`: Expected the current scope name `Certification`

Hint: To end the current scope `Certification`, specify its name:
  end ̲C̲e̲r̲t̲i̲f̲i̲c̲a̲t̲i̲o̲n̲
error: IndisputableMonolith.lean:4559:0: Invalid name after `end`: Expected `Certification`, but found `Recognition`

Hint: If you meant to end the outer scope(s) `Recognition`, you must end all the intervening scopes `Recognition.Certification`:
  end Recognition.̲C̲e̲r̲t̲i̲f̲i̲c̲a̲t̲i̲o̲n̲
error: IndisputableMonolith.lean:4560:0: Invalid name after `end`: Expected `Certification`, but found `IndisputableMonolith`

Hint: If you meant to end the outer scope(s) `IndisputableMonolith`, you must end all the intervening scopes `IndisputableMonolith.Recognition.Certification`:
  end IndisputableMonolith.̲R̲e̲c̲o̲g̲n̲i̲t̲i̲o̲n̲.̲C̲e̲r̲t̲i̲f̲i̲c̲a̲t̲i̲o̲n̲
error: IndisputableMonolith.lean:4603:28: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4603:58: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4626:27: unsolved goals
⊢ 0 < M0
error: IndisputableMonolith.lean:4630:62: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4634:52: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4636:57: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4637:57: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4647:31: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4657:54: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4643:62: Application type mismatch: The argument
  M0
has type
  ℝ
of sort `Type` but is expected to have type
  ?m.137 ≠ 0
of sort `Prop` in the application
  mul_div_mul_left (rexp Af) (rexp Ag) M0
warning: IndisputableMonolith.lean:4645:14: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:4650:35: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4651:38: Unknown identifier `sub_eq`
error: IndisputableMonolith.lean:4650:53: unsolved goals
f g : Fermion
hZ : ZOf f = ZOf g
Af : ℝ := (↑(rung f) - 8 + 𝓕(ZOf f)) * Real.log sorry
Ag : ℝ := (↑(rung g) - 8 + 𝓕(ZOf g)) * Real.log sorry
hM : M0 ≠ 0
⊢ 8 * Real.log (sorry ()) +
      (𝓕(ZOf f) * Real.log (sorry ()) +
        (↑(rung f) * Real.log (sorry ()) +
          (-(8 * Real.log (sorry ())) + (-(𝓕(ZOf g) * Real.log (sorry ())) + -(↑(rung g) * Real.log (sorry ())))))) =
    𝓕(ZOf f) * Real.log (sorry ()) +
      (↑(rung f) * Real.log (sorry ()) + (-(𝓕(ZOf g) * Real.log (sorry ())) + -(↑(rung g) * Real.log (sorry ()))))
warning: IndisputableMonolith.lean:4656:14: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:4658:14: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:4652:30: This simp argument is unused:
  mul_add

Hint: Omit it from the simp argument list.
  simp [Af, Ag, sub_eq, sub_eq_add_neg, add_comm, add_left_comm, add_assoc,
                             ̵ ̵ ̵ ̵m̵u̵l̵_̵add,̵ ̵a̵d̵d̵_mul, sub_eq_add_neg]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:4665:13: don't know how to synthesize implicit argument 'α'
  @LE.le (?m.1 → ℚ) Pi.hasLe lo hi
context:
f : Fermion
lo hi : ?m.1 → ℚ
⊢ Type u_1
error: IndisputableMonolith.lean:4664:5: Failed to infer type of binder `hi`
error: IndisputableMonolith.lean:4669:3: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  ResidueCert
error: IndisputableMonolith.lean:4669:24: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  ResidueCert
error: IndisputableMonolith.lean:4669:40: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  ResidueCert
error: IndisputableMonolith.lean:4669:48: Invalid field notation: Type is not of the form `C ...` where C is a constant
  c
has type
  ResidueCert
error: IndisputableMonolith.lean:4671:0: Unexpected name `RSBridge` after `end`: The current section is unnamed

Hint: Delete the name `RSBridge` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵R̵S̵B̵r̵i̵d̵g̵e̵
error: IndisputableMonolith.lean:4672:0: Unexpected name `IndisputableMonolith` after `end`: The current section is unnamed

Hint: Delete the name `IndisputableMonolith` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵n̵d̵i̵s̵p̵u̵t̵a̵b̵l̵e̵M̵o̵n̵o̵l̵i̵t̵h̵
error: IndisputableMonolith.lean:4714:27: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4714:55: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4717:48: Unknown identifier `r`
error: IndisputableMonolith.lean:4720:60: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4724:2: Tactic `assumption` failed

x y : ℝ
⊢ rexp ((x + y) * Real.log (sorry ())) = rexp (x * Real.log (sorry ())) * rexp (y * Real.log (sorry ()))
error: IndisputableMonolith.lean:4728:19: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4729:20: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4729:51: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:4726:69: unsolved goals
x y : ℝ
this : Real.log sorry * (x - y) = Real.log sorry * x + Real.log sorry * -y
⊢ rexp ((x + -y) * Real.log (sorry ())) = rexp (x * Real.log (sorry ())) * (rexp (y * Real.log (sorry ())))⁻¹
warning: IndisputableMonolith.lean:4730:8: This simp argument is unused:
  this

Hint: Omit it from the simp argument list.
  simp [̵t̵h̵i̵s̵,̵ ̵s̵u̵b̵_̵e̵q̵_̵a̵d̵d̵_̵n̵e̵g̵,̵[̲s̲u̲b̲_̲e̲q̲_̲a̲d̲d̲_̲n̲e̲g̲,̲ Real.exp_add, Real.exp_neg, div_eq_mul_inv, mul_comm, mul_left_comm,
  ̲  ̲ ̲ ̲mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4730:30: This simp argument is unused:
  Real.exp_add

Hint: Omit it from the simp argument list.
  simp [this, sub_eq_add_neg, R̵e̵a̵l̵.̵e̵x̵p̵_̵a̵d̵d̵,̵ ̵Real.exp_neg, div_eq_mul_inv, mul_comm, mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4730:44: This simp argument is unused:
  Real.exp_neg

Hint: Omit it from the simp argument list.
  simp [this, sub_eq_add_neg, Real.exp_add, R̵e̵a̵l̵.̵e̵x̵p̵_̵n̵e̵g̵,̵ ̵div_eq_mul_inv, mul_comm, mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4731:18: This simp argument is unused:
  mul_left_comm

Hint: Omit it from the simp argument list.
  simp [this, sub_eq_add_neg, Real.exp_add, Real.exp_neg, div_eq_mul_inv, mul_comm, m̵u̵l̵_̵l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:4731:33: This simp argument is unused:
  mul_assoc

Hint: Omit it from the simp argument list.
  simp [this, sub_eq_add_neg, Real.exp_add, Real.exp_neg, div_eq_mul_inv,
  ̵  ̵ ̵ ̵ ̵ ̵ ̵ ̵mul_comm, mul_left_comm,̵ ̵m̵u̵l̵_̵a̵s̵s̵o̵c̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:5796:14: unexpected token ';'; expected '[', '{', '|', '⦃' or term
error: IndisputableMonolith.lean:5791:40: Unknown identifier `URC.lambda_rec_unique`
error: IndisputableMonolith.lean:5805:4: typeclass instance problem is stuck, it is often due to metavariables
  HDiv (?m.10 U) (?m.11 U) (?m.9 U)
error: IndisputableMonolith.lean:5808:8: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

⊢ units_identity_prop
warning: IndisputableMonolith.lean:5811:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:5817:6: declaration uses 'sorry'
error: IndisputableMonolith.lean:5827:3: failed to synthesize
  NontriviallyNormedField ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:5827:3: failed to synthesize
  AddCommGroup ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
warning: IndisputableMonolith.lean:5830:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:5833:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:5834:71: unused variable `hMlt`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:5835:21: unused variable `R`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:5841:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:5839:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:5844:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:5849:6: declaration uses 'sorry'
error: IndisputableMonolith.lean:5859:26: Unknown identifier `URC.BridgeAxioms.LawfulBridge`
error: IndisputableMonolith.lean:5860:2: Unknown identifier `URC.BridgeAxioms.Manifest.bridge`
warning: IndisputableMonolith.lean:5867:4: declaration uses 'sorry'
error: IndisputableMonolith.lean:5875:2: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:5876:4: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:5880:11: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:5880:29: Unknown identifier `RH.RS.Bridge.mk`
error: IndisputableMonolith.lean:5881:10: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:5881:27: Unknown identifier `RH.RS.Anchors.mk`
error: IndisputableMonolith.lean:5882:10: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:5882:25: Unknown identifier `RH.RS.Bands.mk`
error: IndisputableMonolith.lean:5883:12: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:5883:45: Unknown identifier `uniqueCalibration_any`
error: IndisputableMonolith.lean:5884:12: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:5884:38: Unknown identifier `meetsBands_any_default`
error: IndisputableMonolith.lean:5885:8: Unknown identifier `absolute_layer_any`
error: IndisputableMonolith.lean:5890:2: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:5891:4: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:5893:11: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:5893:29: Unknown identifier `RH.RS.Bridge.mk`
error: IndisputableMonolith.lean:5894:10: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:5894:27: Unknown identifier `RH.RS.Anchors.mk`
error: IndisputableMonolith.lean:5895:10: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:5895:25: Unknown identifier `RH.RS.Bands.mk`
error: IndisputableMonolith.lean:5898:12: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:5898:45: Unknown identifier `uniqueCalibration_any`
error: IndisputableMonolith.lean:5899:12: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:5899:38: Unknown identifier `meetsBands_any_default`
error: IndisputableMonolith.lean:5900:8: Unknown identifier `absolute_layer_any`
error: IndisputableMonolith.lean:5903:21: Unknown identifier `URC.LawfulPhysical`
error: IndisputableMonolith.lean:5904:2: Unknown identifier `URC.Instances.lawfulPhysical_from_monolith`
error: IndisputableMonolith.lean:5911:26: Unknown identifier `URC.LawfulComputational`
error: IndisputableMonolith.lean:5912:2: Unknown identifier `URC.Instances.lawfulComputational_from_monolith`
error: IndisputableMonolith.lean:5922:20: Unknown identifier `URC.LawfulEthical`
error: IndisputableMonolith.lean:5923:2: Unknown identifier `URC.Instances.lawfulEthical_from_monolith`
error: IndisputableMonolith.lean:5928:2: Unknown identifier `URC.AE.B`
error: IndisputableMonolith.lean:5929:51: Unknown identifier `RH.RS.Inevitability_dimless`
error: IndisputableMonolith.lean:5927:4: (kernel) unknown constant 'IndisputableMonolith.Cost.RH.RS.Witness.inevitability_dimless_partial'
error: IndisputableMonolith.lean:5934:12: Unknown identifier `URC.Certificates`
error: IndisputableMonolith.lean:5934:32: Unknown identifier `URC.Inputs`
error: IndisputableMonolith.lean:5938:41: Unknown identifier `URC.Certificates`
error: IndisputableMonolith.lean:5939:8: Unknown identifier `URC.AE.A`
error: IndisputableMonolith.lean:5939:31: Unknown identifier `URC.AE.B`
error: IndisputableMonolith.lean:5940:2: Unknown identifier `URC.AE.C`
error: IndisputableMonolith.lean:5940:20: Unknown identifier `URC.AE.D`
error: IndisputableMonolith.lean:5940:38: Unknown identifier `URC.AE.E`
error: IndisputableMonolith.lean:5941:4: Unknown identifier `RH.RS.Inevitability_dimless`
error: IndisputableMonolith.lean:5942:13: Unknown identifier `URC.AE.B_to_C`
error: IndisputableMonolith.lean:5941:37: unsolved goals
φ : ℝ
C : sorry
hA : sorry
hB : sorry
⊢ sorry ∧ sorry ∧ sorry ∧ sorry
error: IndisputableMonolith.lean:5948:32: Unknown identifier `URC.lambda_rec_unique`
error: IndisputableMonolith.lean:5951:8: (kernel) unknown constant 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.URCAdapters.lawful_normalizer_exists_unique'
error: IndisputableMonolith.lean:5964:5: unknown namespace 'Constants'
warning: IndisputableMonolith.lean:5967:35: `structure ... :=` has been deprecated in favor of `structure ... where`.

Note: This linter can be disabled with `set_option linter.deprecated false`
error: IndisputableMonolith.lean:5968:24: Unknown identifier `Constants.RSUnits`
error: IndisputableMonolith.lean:5969:7: Unknown identifier `Constants.RSUnits.tau_rec_display`
error: IndisputableMonolith.lean:5969:55: Unknown identifier `Constants.K`
error: IndisputableMonolith.lean:5970:7: Unknown identifier `Constants.RSUnits.lambda_kin_display`
error: IndisputableMonolith.lean:5970:58: Unknown identifier `Constants.K`
error: IndisputableMonolith.lean:5971:7: Unknown identifier `Constants.RSUnits.tau_rec_display`
error: IndisputableMonolith.lean:5972:11: Unknown identifier `Constants.RSUnits.lambda_kin_display`
error: IndisputableMonolith.lean:5980:34: Unknown identifier `MaxwellDEC.CochainSpace`
error: IndisputableMonolith.lean:5981:6: Unknown identifier `MaxwellDEC.CochainSpace.F`
error: IndisputableMonolith.lean:5982:8: Unknown identifier `MaxwellDEC.CochainSpace.F`
error: IndisputableMonolith.lean:5983:39: Unknown identifier `Quantum.PathWeight`
error: IndisputableMonolith.lean:5984:6: Unknown identifier `Quantum.BornRuleIface`
error: IndisputableMonolith.lean:5984:35: Unknown identifier `Quantum.BoseFermiIface`
error: IndisputableMonolith.lean:5987:9: Invalid `⟨...⟩` notation: The expected type `AllClaimsHoldProp` is not an inductive type

Note: This notation can only be used when the expected type is an inductive type with a single constructor
error: IndisputableMonolith.lean:5988:2: No goals to be solved
error: IndisputableMonolith.lean:5985:0: type of theorem 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.TruthCore.AllClaimsHold' is not a proposition
  {AllClaimsHoldProp : Sort u_1} → AllClaimsHoldProp
error: IndisputableMonolith.lean:6001:32: Unknown identifier `MaxwellDEC.CochainSpace`
error: IndisputableMonolith.lean:6005:29: Unknown identifier `MaxwellDEC.CochainSpace`
error: IndisputableMonolith.lean:6006:2: Unknown identifier `MaxwellDEC.CochainSpace.d2`
error: IndisputableMonolith.lean:6007:14: Unknown identifier `MaxwellDEC.CochainSpace.bianchi`
error: IndisputableMonolith.lean:6010:3: Unknown identifier `Constants.RSUnits.lambda_kin_display`
error: IndisputableMonolith.lean:6010:46: Unknown identifier `Constants.RSUnits.tau_rec_display`
error: IndisputableMonolith.lean:6011:14: Unknown identifier `Constants.RSUnits.display_speed_eq_c`
warning: IndisputableMonolith.lean:6018:12: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6018:2: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6019:3: unused variable `P`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:6020:3: unused variable `B`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:6020:20: unused variable `Tdyn`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:6030:11: Unknown identifier `Complexity.BalancedParityHidden.restrict`
warning: IndisputableMonolith.lean:6033:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:6040:0: unexpected token '/'; expected command
warning: IndisputableMonolith.lean:6074:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6075:69: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:6075:69: 'norm_num' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
error: IndisputableMonolith.lean:6094:25: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:6095:99: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:6096:12: Invalid `⟨...⟩` notation: The expected type of this term could not be determined
error: IndisputableMonolith.lean:6096:52: Invalid `⟨...⟩` notation: The expected type of this term could not be determined
error: IndisputableMonolith.lean:6100:0: invalid {...} notation, expected type is not of the form (C ...)
  MeasurementMap
warning: IndisputableMonolith.lean:6110:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6107:8: unused variable `time_kernel_dimensionless`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:6149:1: expected token
error: IndisputableMonolith.lean:6168:50: Unknown identifier `n_of_r`
warning: IndisputableMonolith.lean:6168:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:6169:45: Unknown identifier `zeta_of_r`
warning: IndisputableMonolith.lean:6169:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:6179:14: Invalid field notation: Type is not of the form `C ...` where C is a constant
  BridgeData
has type
  Sort ?u.384039
warning: IndisputableMonolith.lean:6178:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:6186:4: unsolved goals
case pos
P : Params
τ0 : ℝ
hτ : τ0 = 0
⊢ max εt 0 = 1
error: IndisputableMonolith.lean:6188:32: unsolved goals
P : Params
τ0 : ℝ
hτ : ¬τ0 = 0
this : τ0 / τ0 = 1
⊢ εt ≤ 1
warning: IndisputableMonolith.lean:6189:6: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6190:14: This simp argument is unused:
  Real.rpow_one

Hint: Omit it from the simp argument list.
  simp [this,̵ ̵R̵e̵a̵l̵.̵r̵p̵o̵w̵_̵o̵n̵e̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6204:4: Unknown constant `Real.rpow_nonneg_of_nonneg`
error: IndisputableMonolith.lean:6206:86: Type mismatch: After simplification, term
  hpow_nonneg
 has type
  0 ≤ max εt (Tdyn / τ0) ^ P.alpha
but is expected to have type
  1 ≤ max εt (Tdyn / τ0) ^ P.alpha
error: IndisputableMonolith.lean:6208:11: Unknown identifier `sub_eq`
error: IndisputableMonolith.lean:6208:4: Type mismatch: After simplification, term
  add_le_add_left this 1
 has type
  0 ≤ P.Clag * (max εt (Tdyn / τ0) ^ P.alpha - 1)
but is expected to have type
  1 ≤ P.Clag + (1 + P.Clag * (max εt (Tdyn / τ0) ^ P.alpha - 1))
error: IndisputableMonolith.lean:6226:43: Application type mismatch: The argument
  this
has type
  0 < εr
but is expected to have type
  max 0 ?m.65 < max εr r0
in the application
  lt_of_le_of_lt (le_max_left 0 ?m.65) this
error: IndisputableMonolith.lean:6231:12: Unknown constant `Real.rpow_nonneg_of_nonneg`
error: IndisputableMonolith.lean:6236:27: Unknown constant `Real.exp_neg_le_one_iff`
error: IndisputableMonolith.lean:6245:6: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6257:18: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6257:36: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6260:24: unsolved goals
hpos : 0 < sorry
⊢ 0.1 ≤ 0.3
error: IndisputableMonolith.lean:6261:28: Application type mismatch: The argument
  this
has type
  @OfScientific.ofScientific Float instOfScientificFloat 1 true 1 ≤ 0.3
but is expected to have type
  @OfScientific.ofScientific ℝ NNRatCast.toOfScientific 1 true 1 ≤ 0.3
in the application
  sqrt_le_sqrt this
error: IndisputableMonolith.lean:6263:24: unsolved goals
hpos : 0 < sorry
h01 : 0 ≤ √0.1 ∧ √0.1 ≤ √0.3
⊢ 0.3 ≤ 0.5
error: IndisputableMonolith.lean:6264:28: Application type mismatch: The argument
  this
has type
  @OfScientific.ofScientific Float instOfScientificFloat 3 true 1 ≤ 0.5
but is expected to have type
  @OfScientific.ofScientific ℝ NNRatCast.toOfScientific 3 true 1 ≤ 0.5
in the application
  sqrt_le_sqrt this
error: IndisputableMonolith.lean:6266:24: unsolved goals
hpos : 0 < sorry
h01 : 0 ≤ √0.1 ∧ √0.1 ≤ √0.3
h12 : √0.3 ≤ √0.5
⊢ 0.5 ≤ 0.7
error: IndisputableMonolith.lean:6267:28: Application type mismatch: The argument
  this
has type
  @OfScientific.ofScientific Float instOfScientificFloat 5 true 1 ≤ 0.7
but is expected to have type
  @OfScientific.ofScientific ℝ NNRatCast.toOfScientific 5 true 1 ≤ 0.7
in the application
  sqrt_le_sqrt this
error: IndisputableMonolith.lean:6269:24: unsolved goals
hpos : 0 < sorry
h01 : 0 ≤ √0.1 ∧ √0.1 ≤ √0.3
h12 : √0.3 ≤ √0.5
h23 : √0.5 ≤ √0.7
⊢ 0.7 ≤ 0.9
error: IndisputableMonolith.lean:6270:28: Application type mismatch: The argument
  this
has type
  @OfScientific.ofScientific Float instOfScientificFloat 7 true 1 ≤ 0.9
but is expected to have type
  @OfScientific.ofScientific ℝ NNRatCast.toOfScientific 7 true 1 ≤ 0.9
in the application
  sqrt_le_sqrt this
error: IndisputableMonolith.lean:6272:35: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6272:60: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6274:23: Application type mismatch: The argument
  √0.1
has type
  ℝ
but is expected to have type
  ℕ
in the application
  @lift √0.1
error: IndisputableMonolith.lean:6275:23: Application type mismatch: The argument
  √0.3
has type
  ℝ
but is expected to have type
  ℕ
in the application
  @lift √0.3
error: IndisputableMonolith.lean:6276:23: Application type mismatch: The argument
  √0.5
has type
  ℝ
but is expected to have type
  ℕ
in the application
  @lift √0.5
error: IndisputableMonolith.lean:6277:23: Application type mismatch: The argument
  √0.7
has type
  ℝ
but is expected to have type
  ℕ
in the application
  @lift √0.7
error: IndisputableMonolith.lean:6286:20: Application type mismatch: The argument
  this
has type
  xi_of_bin 0 ≤ xi_of_bin 1 ∧ xi_of_bin 1 ≤ xi_of_bin 2
but is expected to have type
  xi_of_bin 0 ≤ xi_of_bin 1
in the application
  And.intro this
error: IndisputableMonolith.lean:6288:26: Application type mismatch: The argument
  this
has type
  xi_of_bin 0 ≤ xi_of_bin 1 ∧ xi_of_bin 1 ≤ xi_of_bin 2 ∧ xi_of_bin 2 ≤ xi_of_bin 3
but is expected to have type
  ?m.347 ∧ xi_of_bin 1 ≤ xi_of_bin 2
in the application
  this.right
warning: IndisputableMonolith.lean:6279:59: declaration uses 'sorry'
error: IndisputableMonolith.lean:6294:81: numerals are data in Lean, but the expected type is a proposition
  ?m.48 ≤ ?m.49 : Prop
error: IndisputableMonolith.lean:6294:76: Application type mismatch: The argument
  hmin
has type
  min 1 u ≤ min 1 v
of sort `Prop` but is expected to have type
  ?m.46
of sort `Type ?u.386376` in the application
  max_le_max_left hmin
error: IndisputableMonolith.lean:6296:4: Unknown constant `Real.sqrt_le_sqrt_iff.mpr`
error: IndisputableMonolith.lean:6300:67: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6309:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6312:6: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6315:40: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6317:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6315:83: unsolved goals
a0 g gext : ℝ
ha0 : 0 < a0
hge : 0 ≤ gext
α : ?m.31 := sorry
⊢ 1 - sorry () ≤ 1 + sorry () * (max εa ((g + gext) / a0) ^ (-sorry ()) - max εa (1 + gext / a0) ^ (-sorry ()))
error: IndisputableMonolith.lean:6353:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6355:6: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6370:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6372:6: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6388:70: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6391:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6388:88: unsolved goals
a0 g gext : ℝ
hx : 1 ≤ (g + gext) / a0
α : ?m.39 := sorry
⊢ 1 ≤ 1 + sorry () * max εa ((g + gext) / a0) ^ (-sorry ()) ∧
    1 + sorry () * max εa ((g + gext) / a0) ^ (-sorry ()) ≤ 1 + sorry ()
error: IndisputableMonolith.lean:6421:32: Unknown identifier `Constants.alpha_locked`
warning: IndisputableMonolith.lean:6421:65: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:6423:27: unsolved goals
hpow : rpow 1 sorry = 1
⊢ εt ≤ 1
warning: IndisputableMonolith.lean:6425:14: This simp argument is unused:
  hpow

Hint: Omit it from the simp argument list.
  simp [this,̵ ̵h̵p̵o̵w̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6435:2: unsolved goals
case pos
τ0 : ℝ
hτ : τ0 = 0
⊢ sorry () = 0 ∨ max εt 0 ^ sorry () - 1 = 0
warning: IndisputableMonolith.lean:6437:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6435:14: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6435:27: This simp argument is unused:
  max_eq_right_of_lt

Hint: Omit it from the simp argument list.
  simp [hτ, w_core_time,̵ ̵m̵a̵x̵_̵e̵q̵_̵r̵i̵g̵h̵t̵_̵o̵f̵_̵l̵t̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6445:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6448:13: unused variable `xi`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:6456:56: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6457:4: Unknown constant `Real.rpow_nonneg_of_nonneg`
error: IndisputableMonolith.lean:6458:30: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6458:79: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6459:52: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6460:15: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6460:36: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6460:85: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6461:13: Unknown identifier `sub_eq`
error: IndisputableMonolith.lean:6461:101: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6462:36: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6464:26: Unknown identifier `one_le_n_of_r`
error: IndisputableMonolith.lean:6464:15: unsolved goals
xi A r0 p : ℝ
hxi : 0 ≤ xi
hA : 0 ≤ A
hr0 : 0 < r0
hp : 0 < p
Tdyn τ0 r : ℝ
hpow_nonneg : 0 ≤ (max εt (Tdyn / τ0)).rpow sorry
hcore_nonneg : 0 ≤ 1 + sorry * ((max εt (Tdyn / τ0)).rpow sorry - 1)
⊢ 0 ≤ ?m.186
error: IndisputableMonolith.lean:6464:102: `simp` made no progress
error: IndisputableMonolith.lean:6453:55: unsolved goals
xi A r0 p : ℝ
hxi : 0 ≤ xi
hA : 0 ≤ A
hr0 : 0 < r0
hp : 0 < p
Tdyn τ0 r : ℝ
hpow_nonneg : 0 ≤ (max εt (Tdyn / τ0)).rpow sorry
hcore_nonneg : 0 ≤ 1 + sorry * ((max εt (Tdyn / τ0)).rpow sorry - 1)
⊢ 0 ≤ (1 + sorry () * (max εt (Tdyn / τ0) ^ sorry () - 1)) * n_of_r A r0 p r * zeta_of_r r * xi_of_u 0
error: IndisputableMonolith.lean:6496:13: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6493:80: unsolved goals
a0 : ℝ
ha0 : 0 < a0
⊢ w_core_accel a0 a0 0 = 1
error: IndisputableMonolith.lean:6510:58: Unknown identifier `Constants.Clag`
warning: IndisputableMonolith.lean:6517:6: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:6518:4: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:6520:15: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6520:84: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6522:11: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6522:58: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6523:47: Unknown identifier `Constants.Clag_pos`
error: IndisputableMonolith.lean:6544:57: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
this✝¹ : 0 ≤ rexp (-(max 0 r / max εr r0) ^ p)
this✝ : 0 ≤ max 0 r
this : εr ≤ max εr r0
⊢ ?m.173 < εr ∨ ?m.173 < r0
error: IndisputableMonolith.lean:6544:51: Application type mismatch: The argument
  this
has type
  εr ≤ max εr r0
but is expected to have type
  0 ≤ ?m.173
in the application
  lt_of_le_of_lt this
error: IndisputableMonolith.lean:6546:38: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
this✝¹ : 0 ≤ rexp (-(max 0 r / max εr r0) ^ p)
this✝ : 0 ≤ max 0 r
this : 0 < max εr r0
⊢ 0 ≤ max 0 ?m.204
error: IndisputableMonolith.lean:6546:74: Application type mismatch: The argument
  this
has type
  0 < max εr r0
but is expected to have type
  max 0 ?m.204 < max 0 r
in the application
  le_of_lt this
error: IndisputableMonolith.lean:6548:24: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
this✝ : 0 ≤ rexp (-(max 0 r / max εr r0) ^ p)
this : 0 ≤ max 0 r / max εr r0
⊢ 0 < (max 0 r / max εr r0) ^ p
error: IndisputableMonolith.lean:6551:69: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
this : 0 ≤ rexp (-(max 0 r / max εr r0) ^ p)
hx : 0 ≤ (max 0 r / max εr r0) ^ p
⊢ 0 < (max 0 r / max εr r0) ^ p
error: IndisputableMonolith.lean:6552:15: Unknown constant `Real.exp_neg_le_one_iff`
error: IndisputableMonolith.lean:6554:6: Type mismatch
  sub_nonneg.mpr this
has type
  0 ≤ 1 - rexp (-(max 0 r / max εr r0) ^ p)
but is expected to have type
  rexp (-(max 0 r / max εr r0) ^ p) ≤ 1
error: IndisputableMonolith.lean:6534:63: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
this : rexp (-(max 0 r / max εr r0) ^ p) ≤ 1
⊢ 0 ≤ 1 - rexp (-(max 0 r / max εr r0) ^ p)
error: IndisputableMonolith.lean:6557:53: Unknown identifier `add_nonneg_of_nonneg_of_nonneg`
error: IndisputableMonolith.lean:6567:89: don't know how to synthesize placeholder for argument 'x'
context:
A r0 p r : ℝ
hA : 0 ≤ A
hexp_le : rexp (-(max 0 r / max εr r0) ^ p) ≥ 0
⊢ ℝ
error: IndisputableMonolith.lean:6567:73: failed to infer 'have' declaration type
error: IndisputableMonolith.lean:6567:65: unsolved goals
A r0 p r : ℝ
hA : 0 ≤ A
hexp_le : rexp (-(max 0 r / max εr r0) ^ p) ≥ 0
⊢ 0 < (max 0 r / max εr r0) ^ p
error: IndisputableMonolith.lean:6568:11: Unknown constant `Real.exp_neg_le_one_iff`
error: IndisputableMonolith.lean:6591:58: Application type mismatch: The argument
  hr
has type
  0 < r
but is expected to have type
  max 0 ?m.56 < max εr r
in the application
  lt_of_le_of_lt (le_max_left 0 ?m.56) hr
error: IndisputableMonolith.lean:6603:83: unexpected token '/--'; expected 'lemma'
warning: IndisputableMonolith.lean:6611:35: unused variable `p`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:6638:74: unsolved goals
C : BaryonCurves
a0 xi A r0 p r : ℝ
ha0 : 0 < a0
⊢ √(max εv (xi * n_of_r A r0 p r * zeta_of_r r * w_core_accel a0 (gbar C r) 0)) =
      √(max εv (xi * n_of_r A r0 p r * zeta_of_r r)) ∨
    vbar C r = 0
warning: IndisputableMonolith.lean:6639:21: This simp argument is unused:
  w_core_accel_at_ref

Hint: Omit it from the simp argument list.
  simp [vrot, w_tot, w̵_̵c̵o̵r̵e̵_̵a̵c̵c̵e̵l̵_̵a̵t̵_̵r̵e̵f̵,̵ ̵ha0]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6639:42: This simp argument is unused:
  ha0

Hint: Omit it from the simp argument list.
  simp [vrot, w_tot, w_core_accel_at_ref,̵ ̵h̵a̵0̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6644:76: unsolved goals
C : BaryonCurves
a0 xi A r0 p r : ℝ
⊢ √(max εv (xi * n_of_r A r0 p r * zeta_of_r r * w_core KernelMode.time a0 (gbar C r) 0 1)) =
      √(max εv (xi * n_of_r A r0 p r * zeta_of_r r)) ∨
    vbar C r = 0
warning: IndisputableMonolith.lean:6645:31: This simp argument is unused:
  w_core_time_at_ref

Hint: Omit it from the simp argument list.
  simp [vrot_mode, w_tot_mode,̵ ̵w̵_̵c̵o̵r̵e̵_̵t̵i̵m̵e̵_̵a̵t̵_̵r̵e̵f̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6654:56: unsolved goals
C : BaryonCurves
a0 xi A r0 p r : ℝ
ha0 : 0 < a0
⊢ √(max εv (xi * n_of_r A r0 p r * zeta_of_r r * w_core KernelMode.accel a0 (gbar C r) 0 1)) =
      √(max εv (xi * n_of_r A r0 p r * zeta_of_r r * w_core KernelMode.time a0 (gbar C r) 0 1)) ∨
    vbar C r = 0
warning: IndisputableMonolith.lean:6655:31: This simp argument is unused:
  w_core_modes_ref_eq

Hint: Omit it from the simp argument list.
  simp [vrot_mode, w_tot_mode, w̵_̵c̵o̵r̵e̵_̵m̵o̵d̵e̵s̵_̵r̵e̵f̵_̵e̵q̵,̵ ̵ha0]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6655:52: This simp argument is unused:
  ha0

Hint: Omit it from the simp argument list.
  simp [vrot_mode, w_tot_mode, w_core_modes_ref_eq,̵ ̵h̵a̵0̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6672:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6677:6: Unknown identifier `Constants.Clag`
error: IndisputableMonolith.lean:6680:11: Unknown identifier `Constants.alpha_locked`
error: IndisputableMonolith.lean:6677:94: unsolved goals
a0 g gext : ℝ
hge : 0 ≤ gext
ha0 : 0 < a0
α : ?m.119 := sorry
⊢ |w_core_accel g gext - w_core_accel g 0| ≤
    sorry () *
      (|max (a0 / 1e9) ((g + gext) / a0) ^ (-sorry ()) - max (a0 / 1e9) (g / a0) ^ (-sorry ())| +
        |(1 + gext / a0) ^ (-sorry ()) - 1|)
error: IndisputableMonolith.lean:6713:0: Unexpected name `ILG` after `end`: The current section is unnamed

Hint: Delete the name `ILG` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵L̵G̵
error: IndisputableMonolith.lean:6714:0: Unexpected name `Gravity` after `end`: The current section is unnamed

Hint: Delete the name `Gravity` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵G̵r̵a̵v̵i̵t̵y̵
error: IndisputableMonolith.lean:6715:0: Unexpected name `IndisputableMonolith` after `end`: The current section is unnamed

Hint: Delete the name `IndisputableMonolith` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵n̵d̵i̵s̵p̵u̵t̵a̵b̵l̵e̵M̵o̵n̵o̵l̵i̵t̵h̵
error: IndisputableMonolith.lean:6718:0: Unexpected name `Constants` after `end`: The current section is unnamed

Hint: Delete the name `Constants` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵C̵o̵n̵s̵t̵a̵n̵t̵s̵
error: IndisputableMonolith.lean:6719:0: Unexpected name `IndisputableMonolith` after `end`: The current section is unnamed

Hint: Delete the name `IndisputableMonolith` to end the current unnamed scope; outer named scopes can then be closed using additional `end` command(s):
  end ̵I̵n̵d̵i̵s̵p̵u̵t̵a̵b̵l̵e̵M̵o̵n̵o̵l̵i̵t̵h̵
error: IndisputableMonolith.lean:6727:5: unknown namespace 'Constants'
error: IndisputableMonolith.lean:6732:102: unexpected token 'open'; expected 'lemma'
error: IndisputableMonolith.lean:6733:5: unknown namespace 'Constants'
error: IndisputableMonolith.lean:6736:55: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6740:23: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6742:19: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6742:36: Unknown identifier `Constants.phi_pos`
error: IndisputableMonolith.lean:6743:37: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6743:54: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6746:24: Unknown identifier `Constants.IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:6740:55: unsolved goals
U : sorry
k : ℕ
r : ℤ
f : ℝ
hφpos : 0 < sorry
hexp_log : rexp (Real.log sorry) = sorry
L : ℝ := Real.log sorry
hdist : (↑r + 1 + f) * L = (↑r + f) * L + L
⊢ (rexp ((↑r + 1 + f) * Real.log (sorry ())) = sorry () * rexp ((↑r + f) * Real.log (sorry ())) ∨ sorry () = 0) ∨
    B_of k = 0
warning: IndisputableMonolith.lean:6751:22: This simp argument is unused:
  hdist

Hint: Omit it from the simp argument list.
  simp [Int.cast_add, h̵d̵i̵s̵t̵,̵ ̵Real.exp_add, hexp_log, mul_comm, mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6751:29: This simp argument is unused:
  Real.exp_add

Hint: Omit it from the simp argument list.
  simp [Int.cast_add, hdist, R̵e̵a̵l̵.̵e̵x̵p̵_̵a̵d̵d̵,̵ ̵hexp_log, mul_comm, mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6751:43: This simp argument is unused:
  hexp_log

Hint: Omit it from the simp argument list.
  simp [Int.cast_add, hdist, Real.exp_add, h̵e̵x̵p̵_̵l̵o̵g̵,̵ ̵mul_comm, mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6751:53: This simp argument is unused:
  mul_comm

Hint: Omit it from the simp argument list.
  simp [Int.cast_add, hdist, Real.exp_add, hexp_log, mul_c̵o̵m̵m̵,̵ ̵m̵u̵l_̵l̵eft_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6752:44: unexpected token '-'; expected 'lemma'
error: IndisputableMonolith.lean:6756:2: expected checkColGt
error: IndisputableMonolith.lean:6753:92: unsolved goals
case zero
L : ℝ
⊢ rexp (↑0 * L) = rexp L ^ 0

case succ
L : ℝ
n✝ : ℕ
a✝ : rexp (↑n✝ * L) = rexp L ^ n✝
⊢ rexp (↑(n✝ + 1) * L) = rexp L ^ (n✝ + 1)
error: IndisputableMonolith.lean:6765:30: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6769:25: Unknown identifier `Constants.IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:6771:51: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6771:67: Unknown identifier `Constants.exp_log_phi`
error: IndisputableMonolith.lean:6765:67: unsolved goals
U : sorry
k : ℕ
r : ℤ
n : ℕ
f L : ℝ
hdist : (↑r + ↑n + f) * L = (↑r + f) * L + ↑n * L
⊢ (rexp ((↑r + ↑n + f) * Real.log (sorry ())) = sorry () ^ n * rexp ((↑r + f) * Real.log (sorry ())) ∨ sorry () = 0) ∨
    B_of k = 0
warning: IndisputableMonolith.lean:6771:8: This simp argument is unused:
  hdist

Hint: Omit it from the simp argument list.
  simp [h̵d̵i̵s̵t̵,̵ ̵Real.exp_add, exp_nat_mul (Real.log Constants.phi), Constants.exp_log_phi, mul_comm,
  ̲  ̲ ̲ ̲mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6771:15: This simp argument is unused:
  Real.exp_add

Hint: Omit it from the simp argument list.
  simp [hdist, R̵ea̵l̵.̵e̵xp_a̵d̵d̵,̵ ̵e̵x̵p̵_̵nat_mul (Real.log Constants.phi), Constants.exp_log_phi, mul_comm, mul_left_comm,
  ̲  ̲ ̲ ̲mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6771:90: This simp argument is unused:
  mul_comm

Hint: Omit it from the simp argument list.
  simp [hdist, Real.exp_add, exp_nat_mul (Real.log Constants.phi), Constants.exp_log_phi,
  ̲ m̵u̵l̵_̵c̵o̵m̵m̵,̵  ̲ ̲mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6774:24: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6778:24: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:6789:38: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6786:14: declaration uses 'sorry'
error: IndisputableMonolith.lean:6794:6: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6803:9: Unknown identifier `B_of_succ`
error: IndisputableMonolith.lean:6803:2: Type mismatch: After simplification, term
  this
 has type
  B_of (kOf δ (fromNat δ (m + 1))) = B_of (kOf δ (fromNat δ m) + 1)
but is expected to have type
  B_of (kOf δ (fromNat δ (m + 1))) = 2 * B_of (kOf δ (fromNat δ m))
error: IndisputableMonolith.lean:6808:19: Unknown identifier `Constants.RSUnits.EcohDerived`
error: IndisputableMonolith.lean:6809:36: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6810:39: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6812:9: Invalid argument: Variable `h` is not a proposition or let-declaration
error: IndisputableMonolith.lean:6812:2: Tactic `assumption` failed

U : sorry
k : ℕ
r : ℤ
f Ecoh0 : ℝ
h : sorry
⊢ sorry () = Ecoh0 / sorry () ^ 5 ∨ B_of k = 0
error: IndisputableMonolith.lean:6816:20: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6817:26: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6819:16: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6819:54: unsolved goals
z : ℤ
hz : 0 ≤ z
⊢ (match z with
    | Int.ofNat n => sorry () ^ n
    | Int.negSucc n => (sorry () ^ (n + 1))⁻¹) =
    sorry () ^ z.toNat
warning: IndisputableMonolith.lean:6819:63: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6819:63: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6819:73: This simp argument is unused:
  hz

Hint: Omit it from the simp argument list.
  simp [phi_zpow,̵ ̵h̵z̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6822:20: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6822:61: unsolved goals
z : ℤ
hz : z < 0
this : ¬0 ≤ z
⊢ (match z with
    | Int.ofNat n => sorry () ^ n
    | Int.negSucc n => (sorry () ^ (n + 1))⁻¹) =
    (sorry () ^ (-z).toNat)⁻¹
warning: IndisputableMonolith.lean:6824:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6824:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6824:18: This simp argument is unused:
  this

Hint: Omit it from the simp argument list.
  simp [phi_zpow,̵ ̵t̵h̵i̵s̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:6834:17: Unknown identifier `mass_ratio_power_ge`
error: IndisputableMonolith.lean:6840:17: Unknown identifier `mass_ratio_power_le`
error: IndisputableMonolith.lean:6851:44: Unknown identifier `mass_pos`
error: IndisputableMonolith.lean:6852:10: Unknown identifier `mass_kshift`
error: IndisputableMonolith.lean:6850:41: unsolved goals
U : sorry
k : ℕ
r : ℤ
f : ℝ
hpos : mass U k r f ≠ 0
⊢ mass U (k + 1) r f / mass U k r f = 2
error: IndisputableMonolith.lean:6857:36: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6858:44: Unknown identifier `mass_pos`
error: IndisputableMonolith.lean:6864:23: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6869:2: expected checkColGt
warning: IndisputableMonolith.lean:6880:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:6883:19: This simp argument is unused:
  mul_comm

Hint: Omit it from the simp argument list.
  simp [B_of_succ, m̵u̵l̵_̵c̵o̵m̵m̵,̵ ̵mul_left_comm, mul_assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6883:29: This simp argument is unused:
  mul_left_comm

Hint: Omit it from the simp argument list.
  simp [B_of_succ, mul_comm, mul_l̵e̵f̵t̵_̵c̵o̵m̵m̵,̵ ̵m̵u̵l̵_̵assoc]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:6885:14: declaration uses 'sorry'
error: IndisputableMonolith.lean:6890:34: Unknown identifier `mass_pos`
error: IndisputableMonolith.lean:6896:34: Unknown identifier `mass_pos`
error: IndisputableMonolith.lean:6897:13: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6898:12: Unknown identifier `Constants.one_lt_phi`
warning: IndisputableMonolith.lean:6903:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:6910:51: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6916:49: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6922:51: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6925:60: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6926:60: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6928:43: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6929:46: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6933:4: field_simp made no progress on goal
error: IndisputableMonolith.lean:6936:31: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6936:75: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6937:41: Unknown identifier `Constants.phi`
info: IndisputableMonolith.lean:6938:4: Try this: ring_nf
error: IndisputableMonolith.lean:6937:58: unsolved goals
U : sorry
k2 k1 : ℕ
r2 r1 : ℤ
f : ℝ
hpos1 : B_of k1 ≠ 0
hpos2 : sorry ≠ 0
hpos3 : rexp ((↑r1 + f) * Real.log sorry) ≠ 0
this :
  B_of k2 * sorry * rexp ((↑r2 + f) * Real.log sorry) / (B_of k1 * sorry * rexp ((↑r1 + f) * Real.log sorry)) =
    B_of k2 / B_of k1 * (sorry / sorry) * (rexp ((↑r2 + f) * Real.log sorry) / rexp ((↑r1 + f) * Real.log sorry))
hE : sorry / sorry = 1
⊢ ↑r2 * Real.log sorry - Real.log sorry * ↑r1 = Real.log sorry * ↑(r2 - r1)
error: IndisputableMonolith.lean:6941:66: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6942:66: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6944:47: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6945:50: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6947:53: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:6945:72: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:6948:12: Tactic `assumption` failed

U : sorry
k2 k1 : ℕ
r2 r1 : ℤ
f : ℝ
hpos1 : B_of k1 ≠ 0
hpos2 : sorry ≠ 0
hpos3 : rexp ((↑r1 + f) * Real.log sorry) ≠ 0
hE : sorry / sorry = 1
hsub : (↑r2 + f) * Real.log sorry - (↑r1 + f) * Real.log sorry = ↑(r2 - r1) * Real.log sorry
this :
  B_of k2 * (sorry () * rexp ((↑r2 + f) * Real.log (sorry ()))) /
      (B_of k1 * (sorry () * rexp ((↑r1 + f) * Real.log (sorry ())))) =
    B_of k2 / B_of k1 *
      (sorry () / sorry () * (rexp ((↑r2 + f) * Real.log (sorry ())) / rexp ((↑r1 + f) * Real.log (sorry ()))))
⊢ sorry () / sorry () * (rexp ((↑r2 + f) * Real.log (sorry ())) / rexp ((↑r1 + f) * Real.log (sorry ()))) =
      rexp ((↑r2 - ↑r1) * Real.log (sorry ())) ∨
    B_of k2 = 0 ∨ B_of k1 = 0
error: IndisputableMonolith.lean:6953:29: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6957:12: Unknown constant `Int.ofNat_toNat_of_nonneg`
error: IndisputableMonolith.lean:6963:47: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6964:9: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6965:39: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6965:55: Unknown identifier `Constants.exp_log_phi`
error: IndisputableMonolith.lean:6964:51: unsolved goals
U : sorry
k2 k1 : ℕ
r2 r1 : ℤ
f : ℝ
h : r1 ≤ r2
hn : 0 ≤ r2 - r1
hcast : ↑(r2 - r1) = ↑(r2 - r1).toNat
this : mass U k2 r2 f / mass U k1 r1 f = B_of k2 / B_of k1 * rexp (↑(r2 - r1) * Real.log sorry)
⊢ rexp (↑(r2 - r1).toNat * Real.log (sorry ())) = sorry () ^ (r2 - r1).toNat
error: IndisputableMonolith.lean:6972:34: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6974:36: Application type mismatch: The argument
  h
has type
  r2 < r1
but is expected to have type
  0 < r1 - r2
in the application
  le_of_lt h
error: IndisputableMonolith.lean:6975:65: Unknown constant `Int.ofNat_toNat_of_nonneg`
error: IndisputableMonolith.lean:6978:52: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6979:36: Unknown identifier `Constants.phi`
info: IndisputableMonolith.lean:6980:66: Try this: ring_nf
error: IndisputableMonolith.lean:6980:63: unsolved goals
U : sorry
k2 k1 : ℕ
r2 r1 : ℤ
f : ℝ
h : r2 < r1
hr : 0 ≤ r1 - r2
ndef : r1 - r2 = Int.ofNat (r1 - r2).toNat
hfull : mass U k2 r2 f / mass U k1 r1 f = B_of k2 / B_of k1 * rexp (↑(r2 - r1) * Real.log sorry)
⊢ ↑(r2 - r1) = -↑(-r2 + r1)
error: IndisputableMonolith.lean:6981:58: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6981:4: Tactic `simp` failed with a nested error:
maximum recursion depth has been reached
use `set_option maxRecDepth <num>` to increase limit
use `set_option diagnostics true` to get diagnostic information
error: IndisputableMonolith.lean:6982:15: Unknown identifier `Constants.exp_log_phi`
error: IndisputableMonolith.lean:6986:70: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6987:75: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6995:46: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:6996:50: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:7008:6: declaration uses 'sorry'
error: IndisputableMonolith.lean:7020:58: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:7021:85: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:7024:9: declaration uses 'sorry'
error: IndisputableMonolith.lean:7027:38: Unknown identifier `Constants.phi`
warning: IndisputableMonolith.lean:7028:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
warning: IndisputableMonolith.lean:7038:18: declaration uses 'sorry'
error: IndisputableMonolith.lean:7080:4: unexpected token 'λ'; expected ')'
error: IndisputableMonolith.lean:7106:6: Type mismatch: After simplification, term
  h'
 has type
  G.xi * (G.lambda * K.w t ζ1) ≤ G.xi * (G.lambda * K.w t ζ2)
but is expected to have type
  G.xi * (G.lambda * K.w t (G.zeta ζ1)) ≤ G.xi * (G.lambda * K.w t (G.zeta ζ2))
error: IndisputableMonolith.lean:7115:18: unexpected token 'λ'; expected ')'
error: IndisputableMonolith.lean:7142:23: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7145:26: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7147:9: Invalid field notation: Type is not of the form `C ...` where C is a constant
  PathWeight
has type
  x✝
error: IndisputableMonolith.lean:7148:2: `simp` made no progress
error: IndisputableMonolith.lean:7152:41: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7157:42: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7162:45: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7171:43: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7168:43: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7169:44: unsolved goals
x✝ : Sort u_1
PathWeight : x✝
γ : Type
PW : sorry
g : γ
h : sorry = {g}
⊢ sorry = 1
error: IndisputableMonolith.lean:7177:17: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7187:34: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7190:47: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ
error: IndisputableMonolith.lean:7191:65: unsolved goals
x✝ : Sort u_1
PathWeight : x✝
γ : Type
PW : sorry
g : γ
hg : g ∈ sorry
⊢ sorry PW g * sorry PW g = sorry ()
warning: IndisputableMonolith.lean:7192:30: This simp argument is unused:
  hg

Hint: Omit it from the simp argument list.
  simp [h̵g̵,̵ ̵sq, Real.mul_self_sqrt]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:7192:38: This simp argument is unused:
  Real.mul_self_sqrt

Hint: Omit it from the simp argument list.
  simp [hg, sq,̵ ̵R̵e̵a̵l̵.̵m̵u̵l̵_̵s̵e̵l̵f̵_̵s̵q̵r̵t̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:7202:16: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7205:12: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7206:18: Unknown constant `Real.abs`
error: IndisputableMonolith.lean:7206:38: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7208:67: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7208:45: Function expected at
  Linearization
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  E
warning: IndisputableMonolith.lean:7208:2: declaration uses 'sorry'
error: IndisputableMonolith.lean:7211:82: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7212:20: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7211:60: Function expected at
  Linearization
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  E
error: IndisputableMonolith.lean:7219:15: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7222:5: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7221:57: Invalid field notation: Type is not of the form `C ...` where C is a constant
  E
has type
  EventSystem
error: IndisputableMonolith.lean:7221:38: Function expected at
  MixedState
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  E
error: IndisputableMonolith.lean:7231:69: failed to synthesize
  OfNat H 0
numerals are polymorphic in Lean, but the numeral `0` cannot be used in a context where the expected type is
  H
due to the absence of the instance above

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:7232:21: failed to synthesize
  Fintype ι

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:7236:36: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7236:46: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7237:7: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7239:61: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7239:71: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7240:28: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7247:15: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7251:5: unexpected token 'in'; expected ','
error: IndisputableMonolith.lean:7250:53: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7250:37: Function expected at
  IPMixed
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  M
error: IndisputableMonolith.lean:7254:13: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7254:19: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7255:13: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7255:19: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7261:47: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7261:54: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7261:60: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7262:16: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7264:60: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7264:70: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7267:68: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7267:78: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7271:37: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7271:47: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7272:23: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
error: IndisputableMonolith.lean:7272:37: Invalid field notation: Type is not of the form `C ...` where C is a constant
  M
has type
  IPModel
warning: IndisputableMonolith.lean:7277:2: try 'simp' instead of 'simpa'

Note: This linter can be disabled with `set_option linter.unnecessarySimpa false`
error: IndisputableMonolith.lean:7289:2: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  (Sum γ₁ γ₂)
error: IndisputableMonolith.lean:7342:34: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ₁
error: IndisputableMonolith.lean:7342:56: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  γ₂
error: IndisputableMonolith.lean:7342:73: Function expected at
  PathWeight
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  (γ₁ × γ₂)
error: IndisputableMonolith.lean:7385:33: Function expected at
  Tendsto
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  (fun n => gap_partial n)
error: IndisputableMonolith.lean:7386:56: Unknown identifier `phi_pos`
error: IndisputableMonolith.lean:7386:65: Unknown identifier `inv_lt_one`
error: IndisputableMonolith.lean:7398:39: don't know how to synthesize implicit argument 'Tendsto'
  @gap_converges ?m.3 ?m.4
context:
⊢ ?m.3
error: IndisputableMonolith.lean:7398:39: don't know how to synthesize implicit argument
  @gap_converges ?m.3 ?m.4
context:
⊢ Sort ?u.455631
warning: IndisputableMonolith.lean:7400:6: declaration uses 'sorry'
error: IndisputableMonolith.lean:7425:41: unexpected token '/--'; expected 'lemma'
error: IndisputableMonolith.lean:7431:14: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7449:33: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7474:43: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7479:35: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7482:44: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7509:31: type expected, got
  (Chain : RecognitionStructure → Type)
warning: IndisputableMonolith.lean:7517:27: This simp argument is unused:
  Nat.add_mod

Hint: Omit it from the simp argument list.
  simp [deltaAt, schedule,̵ ̵N̵a̵t̵.̵a̵d̵d̵_̵m̵o̵d̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:7526:30: Invalid argument name `start` for function `Nat.mod_add_mod`

Hint: Perhaps you meant one of the following parameter names:
  • `m`: s̵t̵a̵r̵t̵m̲
  • `k`: s̵t̵a̵r̵t̵k̲
error: IndisputableMonolith.lean:7529:4: Tactic `simp` failed with a nested error:
maximum recursion depth has been reached
use `set_option maxRecDepth <num>` to increase limit
use `set_option diagnostics true` to get diagnostic information
error: IndisputableMonolith.lean:7538:4: Tactic `assumption` failed

start : ℕ
hmod : ∀ (i : ℕ), deltaAt (start + i) = deltaAt (start % 16 + i)
this : True
⊢ ∑ i ∈ Finset.range 16, deltaAt (start + i) = 0
error: IndisputableMonolith.lean:7540:2: Type mismatch: After simplification, term
  of_decide_eq_true (id (Eq.refl true))
 has type
  True
but is expected to have type
  ∑ i ∈ Finset.range 16, deltaAt i = 0
error: IndisputableMonolith.lean:7547:2: Expected type must not contain free variables
  ∑ i ∈ Finset.range 8, deltaAt (start + i) = 0

Hint: Use the `+revert` option to automatically clean up and revert free variables
error: IndisputableMonolith.lean:7554:2: maximum recursion depth has been reached
use `set_option maxRecDepth <num>` to increase limit
use `set_option diagnostics true` to get diagnostic information
error: IndisputableMonolith.lean:7557:40: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7623:2: Unknown identifier `token_delta_sum8_bound`
error: IndisputableMonolith.lean:7632:18: Type mismatch
  Nat.div_add_mod' N 8
has type
  N / 8 * 8 + N % 8 = N
but is expected to have type
  N = N / 8 * 8 + N % 8
error: IndisputableMonolith.lean:7638:2: Expected type must not contain free variables
  |tokenCount N| ≤ 1

Hint: Use the `+revert` option to automatically clean up and revert free variables
error: IndisputableMonolith.lean:7641:48: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7645:4: Unknown identifier `LNAL_opcodes`
error: IndisputableMonolith.lean:7648:29: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7655:15: Missing cases:
(Fin.mk (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ (Nat.succ _)))))))))))))))) _)
error: IndisputableMonolith.lean:7650:8: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

⊢ sorry
error: IndisputableMonolith.lean:7674:38: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7678:8: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

⊢ sorry
error: IndisputableMonolith.lean:7689:8: 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.IndisputableMonolith.Dynamics.token_parity' has already been declared
error: IndisputableMonolith.lean:7703:30: type expected, got
  (Chain : RecognitionStructure → Type)
error: IndisputableMonolith.lean:7705:8: Tactic `introN` failed: There are no additional binders or `let` bindings in the goal to introduce

⊢ sorry
error: IndisputableMonolith.lean:7726:21: Application type mismatch: The argument
  B
has type
  Type u_2
of sort `Type (u_2 + 1)` but is expected to have type
  Prop
of sort `Type` in the application
  ¬B
error: IndisputableMonolith.lean:7726:26: Application type mismatch: The argument
  A
has type
  Type u_1
of sort `Type (u_1 + 1)` but is expected to have type
  Prop
of sort `Type` in the application
  ¬A
error: IndisputableMonolith.lean:7727:32: Function expected at
  resolves
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  b
error: IndisputableMonolith.lean:7728:36: Function expected at
  complexity
but this term has type
  ?m.7

Note: Expected a function because this term is being applied to the argument
  b
error: IndisputableMonolith.lean:7728:51: Function expected at
  complexity
but this term has type
  ?m.7

Note: Expected a function because this term is being applied to the argument
  b'
error: IndisputableMonolith.lean:7729:2: unexpected token 'where'; expected command
error: IndisputableMonolith.lean:7753:23: Tactic `contradiction` failed

h : ∀ (R : Type u_1), ∃ x, ∀ (y : R), x = y
a✝ : ¬∃ x, True
⊢ Empty
error: IndisputableMonolith.lean:7756:51: Type mismatch
  IsRecognition R
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7774:34: Type mismatch
  IsRecognition R
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7776:24: Tactic `decide` failed for proposition
  Unit ≠ Bool
because its `Decidable` instance
  instDecidableNot
did not reduce to `isTrue` or `isFalse`.

After unfolding the instances `instDecidableNot` and `propDecidable`, reduction got stuck at the `Decidable` instance
  choice ⋯

Hint: Reduction got stuck on `choice`, which indicates that a `Decidable` instance is defined using classical reasoning, proving an instance exists rather than giving a concrete construction. The `decide` tactic works by evaluating a decision procedure via reduction, and it cannot make progress with such instances. This can occur due to the `open scoped Classical` command, which enables the instance `propDecidable`.
error: IndisputableMonolith.lean:7787:67: Type mismatch
  IsExchange E
has type
  Type 1
of sort `Type 2` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7803:41: Type mismatch
  IsExchange E
has type
  Type 1
of sort `Type 2` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7803:71: Type mismatch
  IsLedger L
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7816:29: Function expected at
  represents
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  n
error: IndisputableMonolith.lean:7817:2: unexpected token 'where'; expected command
error: IndisputableMonolith.lean:7821:39: Type mismatch
  IsLedger L
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7828:4: 'represents' is not a field of structure 'IsDiscrete'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
warning: IndisputableMonolith.lean:7834:0: declaration uses 'sorry'
error: IndisputableMonolith.lean:7841:10: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:7846:16: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:7846:37: Unknown identifier `Constants.phi`
error: IndisputableMonolith.lean:7850:20: Unknown identifier `Constants.phi_fixed_point`
error: IndisputableMonolith.lean:7874:74: Type mismatch
  Is3Plus1DSpacetime M
has type
  Type 1
of sort `Type 2` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7931:2: Too many variable names provided at alternative 'zero': 2 provided, but 0 expected
error: IndisputableMonolith.lean:7931:2: Too many variable names provided at alternative 'succ': 2 provided, but 1 expected
error: IndisputableMonolith.lean:7933:4: Expected type must not contain free variables
  grayOrder (invGray n.succ) = n.succ

Hint: Use the `+revert` option to automatically clean up and revert free variables
error: IndisputableMonolith.lean:7937:2: Too many variable names provided at alternative 'zero': 2 provided, but 0 expected
error: IndisputableMonolith.lean:7937:14: Tactic `decide` failed for proposition
  adjacentCube (grayOrder (Fin.castSucc 0)) (grayOrder (Fin.succ 0))
because its `Decidable` instance
  propDecidable (adjacentCube (grayOrder (Fin.castSucc 0)) (grayOrder (Fin.succ 0)))
did not reduce to `isTrue` or `isFalse`.

After unfolding the instance `propDecidable`, reduction got stuck at the `Decidable` instance
  choice ⋯

Hint: Reduction got stuck on `choice`, which indicates that a `Decidable` instance is defined using classical reasoning, proving an instance exists rather than giving a concrete construction. The `decide` tactic works by evaluating a decision procedure via reduction, and it cannot make progress with such instances. This can occur due to the `open scoped Classical` command, which enables the instance `propDecidable`.
error: IndisputableMonolith.lean:7937:2: Too many variable names provided at alternative 'succ': 2 provided, but 1 expected
error: IndisputableMonolith.lean:7937:14: Expected type must not contain free variables
  adjacentCube (grayOrder n.succ.castSucc) (grayOrder n.succ.succ)

Hint: Use the `+revert` option to automatically clean up and revert free variables
error: IndisputableMonolith.lean:7942:40: Application type mismatch: The argument
  i.castSucc
has type
  Fin (n - 1 + 1)
but is expected to have type
  Fin n
in the application
  path i.castSucc
error: IndisputableMonolith.lean:7942:58: Application type mismatch: The argument
  i.succ
has type
  Fin (n - 1 + 1)
but is expected to have type
  Fin n
in the application
  path i.succ
error: IndisputableMonolith.lean:7952:33: Type mismatch
  Is3Plus1DSpacetime M
has type
  Type 1
of sort `Type 2` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7952:71: Type mismatch
  Is8BeatCycle C
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7955:12: Unknown identifier `Bridge.T6_exist_8'`
error: IndisputableMonolith.lean:7952:89: unsolved goals
a✝ : ∃ M, sorry
⊢ ∃ C, sorry
error: IndisputableMonolith.lean:7976:32: Type mismatch
  Is8BeatCycle C
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7976:64: Type mismatch
  IsUndecidabilityGap G
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:7979:12: Unknown identifier `Bridge.rung45_first_conflict'`
error: IndisputableMonolith.lean:7976:89: unsolved goals
a✝ : ∃ C, sorry
⊢ ∃ G, sorry
error: IndisputableMonolith.lean:7995:4: Invalid field `balanced`: The environment does not contain `IndisputableMonolith.Ledger.balanced`
  initial
has type
  Ledger M
error: IndisputableMonolith.lean:7995:23: Invalid field `balanced`: The environment does not contain `IndisputableMonolith.Ledger.balanced`
  final
has type
  Ledger M
error: IndisputableMonolith.lean:7996:23: Function expected at
  executes
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  prog
error: IndisputableMonolith.lean:8000:19: Function expected at
  handles_gap
but this term has type
  ?m.10

Note: Expected a function because this term is being applied to the argument
  instr
error: IndisputableMonolith.lean:8003:33: Function expected at
  effect
but this term has type
  ?m.22

Note: Expected a function because this term is being applied to the argument
  i
error: IndisputableMonolith.lean:8003:48: Function expected at
  effect
but this term has type
  ?m.22

Note: Expected a function because this term is being applied to the argument
  j
error: IndisputableMonolith.lean:8005:2: unexpected token 'where'; expected command
error: IndisputableMonolith.lean:8014:69: Unknown identifier `CompleteInstructionSet`
error: IndisputableMonolith.lean:8014:69: 'sorryAx' is not a structure

Hint: This error is possibly due to a change in the `structure` syntax. Now the syntax is `structure S : Type extends P` rather than `structure S extends P : Type`.

The purpose of the change is to accommodate `structure S extends toP : P` syntax for naming parent projections.
error: IndisputableMonolith.lean:8021:8: Type mismatch
  IsUndecidabilityGap G
has type
  Type
of sort `Type 1` but is expected to have type
  Prop
of sort `Type`
error: IndisputableMonolith.lean:8021:48: Function expected at
  MinimalComplete
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  L
error: IndisputableMonolith.lean:8035:17: Unknown identifier `CompleteInstructionSet`
error: IndisputableMonolith.lean:8054:18: Function expected at
  MinimalComplete
but this term has type
  x✝

Note: Expected a function because this term is being applied to the argument
  Dynamics.LNALOpcode
error: IndisputableMonolith.lean:8068:11: Insufficient number of fields for `⟨...⟩` constructor: Constructor `Eq.refl` does not have explicit fields, but 2 were provided
error: IndisputableMonolith.lean:8069:4: No goals to be solved
error: IndisputableMonolith.lean:8020:8: (kernel) unknown constant 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.IndisputableMonolith.Dynamics.eight_window_balance'
error: IndisputableMonolith.lean:8069:26: unexpected token '}'; expected command
error: IndisputableMonolith.lean:8074:64: Invalid field notation: Type is not of the form `C ...` where C is a constant
  U
has type
  Type
error: IndisputableMonolith.lean:8074:49: Function expected at
  IsUniverse
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  U
error: IndisputableMonolith.lean:8093:27: Function expected at
  IsUniverse
but this term has type
  x✝

Note: Expected a function because this term is being applied to the argument
  U
error: IndisputableMonolith.lean:8083:33: Unknown identifier `h_IndisputableMonolith.Constants.phi`
error: IndisputableMonolith.lean:8074:107: unsolved goals
x✝ : Sort u_1
IsUniverse✝ : x✝
h_mp : MP
h_rec : ∃ R, sorry
h_dual : ∃ A B, A ≠ B
h_exch : ∃ E, sorry
h_ledg : ∃ L, sorry
h_disc : ∃ D, IsDiscrete D
h_phi : ∃! s, IsGoldenRatioScaling s
h_dim : ∃ M, sorry
h_beat : ∃ C, sorry
h_gap : ∃ G, sorry
M : RecognitionStructure := { U := Unit, R := fun x x => True }
⊢ ∃! U, sorry ∧ sorry = Dynamics.LNALOpcode
error: IndisputableMonolith.lean:8071:0: internal exception #3
error: IndisputableMonolith.lean:8137:2: unexpected token 'open'; expected 'lemma'
error: IndisputableMonolith.lean:8139:5: unknown namespace 'IndisputableMonolith.Constants'
warning: IndisputableMonolith.lean:8143:12: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8143:2: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8144:12: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8144:2: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8153:4: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8177:4: declaration uses 'sorry'
error: IndisputableMonolith.lean:8202:3: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
warning: IndisputableMonolith.lean:8207:10: declaration uses 'sorry'
error: IndisputableMonolith.lean:8240:2: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8258:12: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8261:31: Application type mismatch: The argument
  p
has type
  Stakeholder × ℤ
of sort `Type` but is expected to have type
  ?m.26
of sort `Sort u_2` in the application
  S.stakeOf p
error: IndisputableMonolith.lean:8271:52: Unknown identifier `Posting`
error: IndisputableMonolith.lean:8275:18: Invalid field notation: Type is not of the form `C ...` where C is a constant
  a
has type
  Alpha
error: IndisputableMonolith.lean:8276:18: Unknown identifier `mkAlpha`
error: IndisputableMonolith.lean:8278:5: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8278:16: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8294:3: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8294:26: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8295:47: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8295:74: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8295:83: Invalid field notation: Type of
  p
is not known; cannot resolve field `accurate`
error: IndisputableMonolith.lean:8300:18: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8301:2: unsolved goals
case pos
Microcycle : Sort u_1
m : Microcycle
hlen : sorry ≤ 8
⊢ sorry () = true ↔ sorry m
error: IndisputableMonolith.lean:8302:2: unsolved goals
case neg
Microcycle : Sort u_1
m : Microcycle
hlen : ¬sorry ≤ 8
⊢ ¬sorry m
warning: IndisputableMonolith.lean:8301:16: This simp argument is unused:
  List.all

Hint: Omit it from the simp argument list.
  simp [hlen,̵ ̵L̵i̵s̵t̵.̵a̵l̵l̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:8313:15: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8313:62: Invalid field notation: Type of
  keys
is not known; cannot resolve field `Nodup`
error: IndisputableMonolith.lean:8314:49: Invalid field notation: Type of
  a
is not known; cannot resolve field `val`
error: IndisputableMonolith.lean:8317:9: unsolved goals
case none
Microcycle : Sort u_1
m : Microcycle
hJ : JusticeTimely8 m = true
hU :
  let keys := sorry;
  sorry
h : exec m = none
⊢ sorry ()
error: IndisputableMonolith.lean:8322:24: Invalid field notation: Type of
  a
is not known; cannot resolve field `val`
error: IndisputableMonolith.lean:8323:6: Tactic `assumption` failed

case some.mk
Microcycle : Sort u_1
m : Microcycle
hJ : JusticeTimely8 m = true
hU :
  let keys := sorry;
  sorry
a : ?m.30
ds : List ℤ
h : exec m = some (a, ds)
this : (sorry ()).natAbs ≤ 1
⊢ sorry ()
warning: IndisputableMonolith.lean:8326:23: unused variable `m`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
warning: IndisputableMonolith.lean:8327:24: unused variable `m`

Note: This linter can be disabled with `set_option linter.unusedVariables false`
error: IndisputableMonolith.lean:8331:45: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8332:52: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8332:72: Invalid field notation: Type of
  p
is not known; cannot resolve field `delta`
error: IndisputableMonolith.lean:8333:96: unsolved goals
Microcycle : Sort u_1
m : Microcycle
⊢ sorry () = true ↔ sorry m
warning: IndisputableMonolith.lean:8336:8: This simp argument is unused:
  List.all

Hint: Omit it from the simp argument list.
  simp ̵[̵L̵i̵s̵t̵.̵a̵l̵l̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:8339:2: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8342:8: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8342:28: Invalid field notation: Type of
  p
is not known; cannot resolve field `delta`
error: IndisputableMonolith.lean:8345:57: unsolved goals
Microcycle : Sort u_1
k : ℕ
m : Microcycle
⊢ sorry () = true ↔ sorry k m
warning: IndisputableMonolith.lean:8348:8: This simp argument is unused:
  List.all

Hint: Omit it from the simp argument list.
  simp ̵[̵L̵i̵s̵t̵.̵a̵l̵l̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:8380:14: Type mismatch
  Nat.succ_le_of_lt this
has type
  Nat.succ 0 ≤ d1.natAbs
but is expected to have type
  (if d1 < 0 ∧ d2 > 0 ∨ d1 > 0 ∧ d2 < 0 then 1 else 0) ≤ d1.natAbs
error: IndisputableMonolith.lean:8384:10: Type mismatch: After simplification, term
  Nat.add_le_add hhead this
 has type
  (if d1 < 0 ∧ 0 < d2 ∨ 0 < d1 ∧ d2 < 0 then 1 else 0) + signFlips (d2 :: rt) ≤
    d1.natAbs + List.foldl (fun acc n => acc + n) d2.natAbs (List.map Int.natAbs rt)
but is expected to have type
  (if d1 < 0 ∧ 0 < d2 ∨ 0 < d1 ∧ d2 < 0 then 1 else 0) + signFlips (d2 :: rt) ≤
    List.foldl (fun acc n => acc + n) (d1.natAbs + d2.natAbs) (List.map Int.natAbs rt)
error: IndisputableMonolith.lean:8391:21: Invalid field notation: Type of
  a
is not known; cannot resolve field `val`
error: IndisputableMonolith.lean:8394:34: Invalid field notation: Type of
  a
is not known; cannot resolve field `val`
error: IndisputableMonolith.lean:8400:9: unsolved goals
case none
Microcycle : Sort u_1
m : Microcycle
h : exec m = none
⊢ sorry () = true ↔ sorry m
error: IndisputableMonolith.lean:8401:13: unsolved goals
case some.mk
Microcycle : Sort u_1
m : Microcycle
a : ?m.10
ds : List ℤ
h : exec m = some (a, ds)
⊢ sorry () = true ↔ sorry m
warning: IndisputableMonolith.lean:8400:18: This simp argument is unused:
  h

Hint: Omit it from the simp argument list.
  simp ̵[̵h̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8403:12: This simp argument is unused:
  h

Hint: Omit it from the simp argument list.
  simp [h̵,̵ ̵stable_bridge, justice_bridge, reciprocity_bridge, temperance_bridge]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8403:15: This simp argument is unused:
  stable_bridge

Hint: Omit it from the simp argument list.
  simp [h, s̵t̵a̵b̵l̵e̵_̵b̵r̵i̵d̵g̵e̵,̵ ̵justice_bridge, reciprocity_bridge, temperance_bridge]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8403:30: This simp argument is unused:
  justice_bridge

Hint: Omit it from the simp argument list.
  simp [h, stable_bridge, j̵u̵s̵t̵i̵c̵e̵_̵b̵r̵i̵d̵g̵e̵,̵ ̵reciprocity_bridge, temperance_bridge]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8403:46: This simp argument is unused:
  reciprocity_bridge

Hint: Omit it from the simp argument list.
  simp [h, stable_bridge, justice_bridge, r̵e̵c̵i̵p̵r̵o̵c̵i̵t̵y̵_̵b̵r̵i̵d̵g̵e̵,̵ ̵temperance_bridge]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8403:66: This simp argument is unused:
  temperance_bridge

Hint: Omit it from the simp argument list.
  simp [h, stable_bridge, justice_bridge, reciprocity_bridge,̵ ̵t̵e̵m̵p̵e̵r̵a̵n̵c̵e̵_̵b̵r̵i̵d̵g̵e̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8406:49: `structure ... :=` has been deprecated in favor of `structure ... where`.

Note: This linter can be disabled with `set_option linter.deprecated false`
error: IndisputableMonolith.lean:8407:12: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8412:44: Invalid field notation: Type of
  a
is not known; cannot resolve field `val`
error: IndisputableMonolith.lean:8415:62: Function expected at
  PublishClosure
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  m
error: IndisputableMonolith.lean:8435:13: Function expected at
  PublishClosure
but this term has type
  ?m.2

Note: Expected a function because this term is being applied to the argument
  x
error: IndisputableMonolith.lean:8435:59: unsolved goals
Microcycle : Sort u_1
x✝ : Sort u_2
PublishClosure : x✝
m : Microcycle
Q : Microcycle → Prop
hQ : ∀ (x : Microcycle) (a : sorry), Q x
h : PublishP m
⊢ Q m
error: IndisputableMonolith.lean:8442:25: Invalid field notation: Type of
  onPosting p
is not known; cannot resolve field `delta`
error: IndisputableMonolith.lean:8442:47: Invalid field notation: Type of
  p
is not known; cannot resolve field `delta`
error: IndisputableMonolith.lean:8443:28: Invalid field notation: Type of
  onPosting p
is not known; cannot resolve field `accurate`
error: IndisputableMonolith.lean:8443:53: Invalid field notation: Type of
  p
is not known; cannot resolve field `accurate`
error: IndisputableMonolith.lean:8444:25: Invalid field notation: Type of
  onPosting p
is not known; cannot resolve field `phase`
error: IndisputableMonolith.lean:8444:47: Invalid field notation: Type of
  p
is not known; cannot resolve field `phase`
error: IndisputableMonolith.lean:8447:2: invalid {...} notation, expected type is not of the form (C ...)
  Microcycle
warning: IndisputableMonolith.lean:8449:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8454:13: 'exact h' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:8455:13: 'exact h' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:8458:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8462:2: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:8462:2: 'simp [List.length_map, φ.preserves_accuracy, φ.preserves_phase]' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
warning: IndisputableMonolith.lean:8465:6: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8469:2: this tactic is never executed

Note: This linter can be disabled with `set_option linter.unreachableTactic false`
warning: IndisputableMonolith.lean:8469:2: 'simp [List.all_map, φ.preserves_delta]' tactic does nothing

Note: This linter can be disabled with `set_option linter.unusedTactic false`
error: IndisputableMonolith.lean:8472:3: Invalid field notation: Type is not of the form `C ...` where C is a constant
  mapMicro m φ
has type
  Microcycle
error: IndisputableMonolith.lean:8472:39: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
warning: IndisputableMonolith.lean:8473:8: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8473:8: This simp argument is unused:
  mapMicro

Hint: Omit it from the simp argument list.
  simp ̵[̵m̵a̵p̵M̵i̵c̵r̵o̵]̵

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:8476:31: Invalid field notation: Type is not of the form `C ...` where C is a constant
  m
has type
  Microcycle
error: IndisputableMonolith.lean:8477:2: Invalid field notation: Type of
  keys (mapMicro m φ)
is not known; cannot resolve field `Nodup`
error: IndisputableMonolith.lean:8477:32: Invalid field notation: Type of
  keys m
is not known; cannot resolve field `Nodup`
error: IndisputableMonolith.lean:8489:33: Invalid field notation: Type is not of the form `C ...` where C is a constant
  p
has type
  Posting✝
error: IndisputableMonolith.lean:8491:30: invalid {...} notation, expected type is not of the form (C ...)
  Posting
error: IndisputableMonolith.lean:8492:30: invalid {...} notation, expected type is not of the form (C ...)
  Posting
error: IndisputableMonolith.lean:8494:23: invalid {...} notation, expected type is not of the form (C ...)
  Microcycle
error: IndisputableMonolith.lean:8497:2: don't know how to synthesize implicit argument 'Microcycle'
  @ReciprocitySigma0With ?m.2 m2 Sphase
context:
⊢ Sort ?u.528786

Note: All parameter types and holes (e.g., `_`) in the header of a theorem are resolved before the proof is processed; information from the proof cannot be used to infer what these values should be
error: IndisputableMonolith.lean:8497:24: don't know how to synthesize implicit argument 'Microcycle'
  @m2 ?m.2
context:
⊢ Sort ?u.528786

Note: All parameter types and holes (e.g., `_`) in the header of a theorem are resolved before the proof is processed; information from the proof cannot be used to infer what these values should be
error: IndisputableMonolith.lean:8497:44: unsolved goals
⊢ ∀ (a : Stakeholder) (b : ℤ), (a, b) ∈ sorry () → b = 0
warning: IndisputableMonolith.lean:8498:31: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8498:57: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8498:61: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8498:65: declaration uses 'sorry'
warning: IndisputableMonolith.lean:8498:46: This simp argument is unused:
  bumpSigma

Hint: Omit it from the simp argument list.
  simp [ReciprocitySigma0With, sigmaBalances, b̵u̵mp̵S̵i̵g̵m̵a̵,̵ ̵m̵2, p0, Sphase, List.foldl]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8498:57: This simp argument is unused:
  m2

Hint: Omit it from the simp argument list.
  simp [ReciprocitySigma0With, sigmaBalances, bumpSigma, m̵2̵,̵ ̵p0, Sphase, List.foldl]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8498:61: This simp argument is unused:
  p0

Hint: Omit it from the simp argument list.
  simp [ReciprocitySigma0With, sigmaBalances, bumpSigma, m2, p̵0̵,̵ ̵Sphase, List.foldl]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8498:65: This simp argument is unused:
  Sphase

Hint: Omit it from the simp argument list.
  simp [ReciprocitySigma0With, sigmaBalances, bumpSigma, m2, p0, S̵p̵h̵a̵s̵e̵,̵ ̵List.foldl]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
warning: IndisputableMonolith.lean:8498:73: This simp argument is unused:
  List.foldl

Hint: Omit it from the simp argument list.
  simp [ReciprocitySigma0With, sigmaBalances, bumpSigma, m2, p0, Sphase,̵ ̵L̵i̵s̵t̵.̵f̵o̵l̵d̵l̵]

Note: This linter can be disabled with `set_option linter.unusedSimpArgs false`
error: IndisputableMonolith.lean:8502:4: invalid {...} notation, expected type is not of the form (C ...)
  Morph
error: IndisputableMonolith.lean:9289:70: typeclass instance problem is stuck, it is often due to metavariables
  HDiv (?m.10 U) (?m.11 U) (?m.9 U)
error: IndisputableMonolith.lean:9294:3: failed to synthesize
  NontriviallyNormedField ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
error: IndisputableMonolith.lean:9294:3: failed to synthesize
  AddCommGroup ℕ

Hint: Additional diagnostic information may be available using the `set_option diagnostics true` command.
warning: IndisputableMonolith.lean:9297:4: declaration uses 'sorry'
error: IndisputableMonolith.lean:9308:2: failed to generate projection 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.MeasurementAxioms.regularity' for the 'Prop'-valued type 'MeasurementAxioms', field must be a proof, but it has type
  Prop
error: IndisputableMonolith.lean:9319:74: Invalid field `EL_transport`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.MeasurementAxioms.EL_transport`
  MA
has type
  MeasurementAxioms
warning: IndisputableMonolith.lean:9321:8: declaration uses 'sorry'
error: IndisputableMonolith.lean:9323:0: type of theorem 'IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.gauge_uniqueness_from_units' is not a proposition
  MeasurementAxioms → Prop
error: IndisputableMonolith.lean:9325:88: Invalid field `gap_listen_positive`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.MeasurementAxioms.gap_listen_positive`
  MA
has type
  MeasurementAxioms
error: IndisputableMonolith.lean:9328:49: Invalid field `EL_transport`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.MeasurementAxioms.EL_transport`
  MA
has type
  MeasurementAxioms
error: IndisputableMonolith.lean:9328:72: Invalid field `gap_listen_positive`: The environment does not contain `IndisputableMonolith.Cost.IndisputableMonolith.VoxelWalks.IndisputableMonolith.YM.OS.IndisputableMonolith.Recognition.Certification.IndisputableMonolith.RSBridge.IndisputableMonolith.Recognition.IndisputableMonolith.Gravity.ILG.URC.BridgeAxioms.MeasurementAxioms.gap_listen_positive`
  MA
has type
  MeasurementAxioms
error: IndisputableMonolith.lean:9335:0: invalid {...} notation, structure type expected
  MeasurementAxioms
error: IndisputableMonolith.lean:9362:12: Unknown identifier `routeA_end_to_end_proof`
error: IndisputableMonolith.lean:9368:11: Unknown identifier `routeB_bridge_end_to_end_proof`
error: IndisputableMonolith.lean:9372:11: Unknown identifier `routeA_end_to_end_proof`
error: IndisputableMonolith.lean:9373:11: Unknown identifier `routeB_bridge_end_to_end_proof`
error: IndisputableMonolith.lean:9378:11: Unknown identifier `routeA_end_to_end_proof`
error: IndisputableMonolith.lean:9379:11: Unknown identifier `routeB_bridge_end_to_end_proof`
error: IndisputableMonolith.lean:9380:11: Unknown identifier `urc_lambda_unique_holds`
error: IndisputableMonolith.lean:9384:2: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:9385:4: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:9387:11: Unknown identifier `RH.RS.Bridge`
error: IndisputableMonolith.lean:9387:29: Unknown identifier `RH.RS.Bridge.mk`
error: IndisputableMonolith.lean:9388:10: Unknown identifier `RH.RS.Anchors`
error: IndisputableMonolith.lean:9388:27: Unknown identifier `RH.RS.Anchors.mk`
error: IndisputableMonolith.lean:9389:10: Unknown identifier `RH.RS.Bands`
error: IndisputableMonolith.lean:9389:25: Unknown identifier `RH.RS.Bands.mk`
error: IndisputableMonolith.lean:9390:12: Unknown identifier `RH.RS.UniqueCalibration`
error: IndisputableMonolith.lean:9390:45: Unknown identifier `uniqueCalibration_any`
error: IndisputableMonolith.lean:9391:12: Unknown identifier `RH.RS.MeetsBands`
error: IndisputableMonolith.lean:9391:38: Unknown identifier `meetsBands_any_default`
error: IndisputableMonolith.lean:9392:8: Unknown identifier `absolute_layer_any`
error: IndisputableMonolith.lean:9397:0: unexpected token '/'; expected command
error: IndisputableMonolith.lean:9425:3: unexpected token 'example'; expected identifier
error: IndisputableMonolith.lean:9427:33: unexpected token 'example'; expected ':=', 'where' or '|'
error: IndisputableMonolith.lean:9428:9: Invalid `⟨...⟩` notation: The expected type of this term could not be determined
error: IndisputableMonolith.lean:9429:2: No goals to be solved
error: IndisputableMonolith.lean:9459:26: Function expected at
  RSPreserving
but this term has type
  ?m.1

Note: Expected a function because this term is being applied to the argument
  ConstraintInstance
error: Lean exited with code 1
Some required targets logged failures:
- IndisputableMonolith
error: build failed
